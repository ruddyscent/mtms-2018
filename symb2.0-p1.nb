(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    316152,       6441]
NotebookOptionsPosition[    305456,       6277]
NotebookOutlinePosition[    305839,       6294]
CellTagsIndexPosition[    305796,       6291]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Kyungwon Chun", "Text",
 CellChangeTimes->{{3.747086573798038*^9, 
  3.747086575455711*^9}},ExpressionUUID->"72aea544-350f-4b97-bde8-\
0c329443c01a"],

Cell[BoxData[{
 RowBox[{"DateString", "[", 
  "]"}], "\[IndentingNewLine]", "$Version", "\[IndentingNewLine]", 
 RowBox[{"<<", 
  "SymbolicComputing`"}], "\[IndentingNewLine]", "$SCVersion"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.747086579567493*^9, 3.747086597576426*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f586dd01-8a05-4ff1-b871-95fc04af50e0"],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.750291178024282*^9, 3.750291179343446*^9}, 
   3.7502912193047047`*^9},ExpressionUUID->"0d319a7d-6934-43d9-aeea-\
88241c02c03b"],

Cell["\<\
W. E. Boyce and R. C. DiPrima, Elementary Differential Equations and Boundary \
Value Problems, 10th ed. Wiley, 2012.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.75029120005584*^9, 
  3.750291203253536*^9}},ExpressionUUID->"382cafab-c3ac-4a70-b76d-\
c5245edf0e5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Separation of Variables; Heat Conduction", "Section",
 CellChangeTimes->{{3.5097087766953125`*^9, 3.509708785491211*^9}, {
   3.7470866686724377`*^9, 3.74708667905171*^9}, 3.747090695696562*^9, 
   3.749517079643056*^9},ExpressionUUID->"da76a470-3977-42c2-b648-\
46408125d0ea"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
m3UZLbq0Fv2+lom9zQYgVASIdrBh4kDd2P56TWazZm+D/GCLcn9Z9+JTOT9e
f+LXmdlbc/sPN4wdqhs/1Gg41GiEyFmJbNQDDzZQ+9avIVq0X22nNPVjL9ms
o1WjUQfH+5vHM1sM0PinN43DHSS9iYZn1KszakaPNmpvCT3F40QQJlruQQC0
TYC8vDFF4rcmLoAfL8HG9U+8myjh5vVd3V0RbweR+EjgqX2G4dgo4gTRG3sb
xXB6Rh0ipUrnkWrxlvzB5PLRtRW6pSW6+UVjC4r0i0oNC0v0C4t0C4p180v0
88sm5pcYgPOKxxdQ6haWjHHU8gfzS18hpEL7LlrqGCUzyC4qnsqYc/IRpnJe
MeXCYsOikgn4CP48/4VuXoH283wNHCwsGl9UTKPxVYC6erEG/Hx+meHzMv28
Mu28Eg0kWVRsWFJkWFSoXVKiWlIiX16hmJ/b/V7m7f+25vA/pz/5LFuwJE+x
rEC9snhscZ568QvtsuLxJUX6JcVjUctxaRG1sQK//SuJFu10Nk4tZak6anlC
1SjVLiyHe8Q43B3mFsIdRDsnX/FZnvzzAuWiAtXSF6PLC+RrX4i3FwsudKga
Dcx4TNsEQ5Gpt60p01sSX35Fg1HVvPvgX0FGSMwBKMLce0yGf/HE696Yz1BJ
4yZET0irlZzr0G4oHFxRLFlWoVtUMb6kyris0riqcuKLGvO6OuvqOsuyGuPi
KuOiavOSGtvyOseKeufyOvuKWvvKGsuqWvNqSiMcAFfUUS6vswJXUJrRvquW
/pXrZ5L9GnIOGeeyeqB9WZ0D/Bm8en7FxOcl43OKdJ++UH1SMArN8qLKiaU1
5mW1FurG9baldZbFVealVdZl1bbltZYVdcZVwJqJVdWWVRBSY6MVocawtkq9
pmDwV8dzf5h04r3Mu/NzB1dW6yF8TZ0J4i+vmljdaFtaPfEnyjwTriTaGWzB
LZfVmb5rSwmuDm0+5+3g+TUmzv8t3F3ACreDZbX2JVX2BRWWeSXGOcWGTwv0
cwon4JFheRX1/9X1xrU1E+srDRsqDWsLlNtLRm8OegZd9OUU7ZAJBeKSJhIb
HvxS4yQO3YkOpUBVM0sQjproyPIwJ2moqgly/8VVTYh7vylnyXOpP61curZA
uKpKs6rFuqLNtbLFs6bZs77RtbHevqnWBnZdox1a4xWN9kWVpqU1tlX1ri+a
vF80eYBrG53w7fom28ZGG1jgumbbuibHF80uIBwg321+0fwXRFecazh+0eIF
fb6wwji3eIw+WpaOLa02ray3gWZb3ehY2+IGQmQ4hhBw/uW1vpX1vrWN9g3N
tk3NnM83gpNzuTXZkxuNyVXKj88W/HD90f+VcXv5k+5N9YZ1jRaIvLbJ8kWj
ZW2TlS/Jmpbp+bavDxL5NXTxbT74/Pomx8bGl6Qhzd61zb5VDd6l1Y55ZabP
ivSfvNDPLXcurHavqHOvqneurDd90WhOarFvbXUnNXuSm/3rKi1r8xRHqkdr
VKw+RG9PcUkTIvGZvC+nXCUImzCqmlmDcLRTLjbUivMKqmr4F5QMP+omTOfT
uQhREXJXGNxcMLq+UJlUZ9zQYtnU5V7XZt/Q6khucW9u9m5rpNza5E1ucm1o
dkLrvahYv6BwbGm5eX2TL6md3dTi39Dk5iI7t7Q6t7VQm9wCdG9q8QK5r5Dv
LLc2zTA2O6eSC9/e4t3c4AQ33trq3dLi4ZnU6N5U71lePLHguWZFiXFDnWNT
g2tzwzTZQsJ1NZZl5ea5xbb5Zc5Nre4trfbkBjO0z5vafGubvetaXZuaLTvq
NHMulfx40/EPMm+vfNK3uW5iW7Nta7MjRufmGLk6QqsJx/hH50y8pEgkR1rl
Wz1JbR7qwy2ObS32Ha3g1bbkZju47sZW9/pWPzwjzCka+6xQt6DcOL/KOr/O
M7/eu7DJvbwJhBDEtG5ps25pt23tdu8cDG7tcG9rtiSXSlKLBkpHfQbuJhUO
x+9csddMkegLqERVE0FVM1sQUzXcCmCxl5NBvqMmEBthDm7jJ0RHSK6cSSnX
rS8xbm10bWvzbGl3belybWl3bO9wpbQ5d7a6U1s9qa3enS2elFYPfzv4osq0
smxiUaF2RflEUqtvSwcLfr693bu91QUevqPVltJm397qgI/Q4EOeOyjdkBzt
u2dTWqOW85C3b8FjOTpjB1HCt7vbfGB3tLj5Mu8Et2xxJ9ValuSNrijUrqug
VSCl1UcjNLtTWlzR3Di7C6pAm2d7s2tjo2tBhW1uiWlZ+URygxUCU9o94P9b
Or3QVu9pM869VPQvScd/lX79i4ftOxqNOzvcXD2KEo65s0cJ13AK41+99SuJ
Fu20Flr1rW2u7VxTv7MNqoCVb/C3tnuS2r2r6p3zSvWgauaXGRZXmRdVWRbU
uxc0epY0e1e3gOy3bW2xbG+zpHRY9gy4d/Y49/Z5Mgf8aZ22LeWSzCp5hS5k
5YRNINpBEyQhlr9/vRwO+nJ6VPT9FOJdR5jziOCUtQRIfEUZOomb7hxsJKR4
nKRUKtYXybfXW3Z3+HZ2eHd0elO6PDs7namdjr3tlrR2U0a7OaPdmt7u2Nvm
3t0Obbt3Z7tra5N1dZlu8YvRNdUT4MwpXb4dne5dHc7dHfbUNsueduvuDivk
sLvTBYTwXR323e1o300Lf9+dnTPFcuWx7+q0Rg9ihG93tjuo7XSmdNhSOhxg
kxuNK0uVS1/IN9QYdrQ5d3V6QIRABM5p47lxvxQ8udu5q8u1o8uZ1OFaWjk2
r0C9usK0tdEBQiW1yws+n9GkXXGz/L2kg7/cfWb9k7Z9LfrUHtf2TgdN3mFN
IHy07/pazoQriRbtdNYJdWRXB9wLnHs7HHva7cDUDteuTt+WTv/aFveCcuMn
L7Tzy82Lq638CMxlda6V9Z51De5NTfbNrZYd3N1hb4cts9N+sMd1fIg53OM+
Mcgc7vYklan2VSnqDH4z904hzC96EwmGI2yIWzMten8LxadHoaqZJYi+bYwk
rvfIv6mMDbIKhkNuQlommH01yi/KlDubjWldDnBR4L5uL7hoWhfQkdZpyewy
R9lpz+x0ZXZ40jq8md0eiABC/YsK3aIXinX1pt297O4u794eN5fKBgnTu+zp
PY59Pe693VxWyHeXe7tnGu3ANN5OKV6vcx88HsZsSqtpU512e4t5N2j4Hndq
Fyfmu1302+7oT+Ptni77nh7uoMexu8cGz5irKyaWFOo2VFt2trozOx2ZzbqN
9+p+mnz0Nyknt+bU728Zy+h2QIaghfgicfl8RamQyL8YuuAesbfLk97tzuh2
ptMWgIbs6mE2tboXV5k/LRz/rMy4uM65sMa6oNq8rN6+qt61tt61udG+rdm2
vc0CTxz7Ou37uxxZnbYj3bYve2yn+53nh/xnhaGMLm9S6cixBmGXNegihOUn
PoXDwTATIFTYREdWvFQ1BFXNrAE/yGryrkz8lG/OBfyEiH3kQodqbYFwR6sl
rdt6sM9+oMtyuM8Fsnl/p/1Qnzez153e507rd6cPeNIH3Pv73Qd73SCngVld
rgPdrsxe/44W1/ISLXBLi2tfXzCjj8ns9Wb1uOLc30MlUFaPG4n8Dkl97yBv
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
FAE6Wrhy9ESjps/9naoaMvntEkiU/v7+w4cPHzlypLKy0mw2g7x59fVTYi8N
qppvDZyqOd9n2VIxeqnP9Ujsz5W4c+kOqv7HEtrg0wOp+7HU+Vji5eh/PRsj
JJTacyVOEOqPxYFHktBDKfNI6n0ucTwV2SDyZYF/U7UhudZ4fRjC/U+kDO2o
5Ob9gYWQaW2Mr18etGgn+ecjsQ98LGeEfSJjn0v9z+nqGSz4XrbM+3DE+1Ts
zRN584X+ZyI/fHwgo0Mc3+gsuRzBXcHhs0cY6vZcbYLH1SdiF0SAwNvySFab
ZX2J8kCn88FI6G1fE7Ro/5RXi6mlXj3i5Qg3Cy+tO0L3U7H/kSx0ZyR8WRrc
VqVIqhw9Oui/JAndELHZEvYxjebNl3sLR5kilb9UG6gYC9aPBZu5NRPi7564
zUTotgh0dRonFTb03ZOVjY8QBknDr40AcqhWSzfBLFfRt2D5cnhScD+UMaBq
9lWpjtapu5zfdV8NP9Y3fmCz2b788suf//znv/zlLxcuXJienl5SUmIwGFiW
BXkTH0Iz7UgbxJ+HSCTE/8XdhNzoHNtTPHyrW/9MYCkQmID5QtNzoeWZ0P5s
2Pp82PR8eOLZsAWOX5+5w/ZcsCJIZaI5CK3PBc5nQnfusBO+yhPbnggtIOAv
DfmSqwyba/RXhrzZIg/cax4Oux6L3Lki1xMuJpAWI8YpIXAM0SD+QzEdjQa8
L/HyBxCSI3I/FjkhwhMRlwoKJpzOJuTME5I8FMfzoYSsuNzcNLfEgr362ycV
jJYtJ6F4PHO4fBLPmPgbXy0hnxv/S/ncHibklvhLJ18c+CtM+aPQvwtcDb5s
OdHcvA9f/kzv9D/zlasUO04slXdyqaLX7XHsxyZe7Vf5yvV3T84qev3jPzNa
jOmufDyTyT9z0kWjIcOubBEoeQ/8iqcC21NwObgyIisQ3DVfYC0Ysj8X2B+L
rTniSRdtsrP5HsR+6cvrn1ALuDwpIRyyzYMKJbRAOJz3toQ91GLcUCzL7LDd
kQYm/9KXfjvVPaa7XPE/wYPJf4LY9XdPm8lXETKEhJOzck9xs2n5asESL9qk
6y/ma4eTvziTc7BOl7mTczY390t5T/PFmHj9nVP8Pzfm+TH/n74KvOJpzld/
Kf/rojaW1au14MF0f4Wva39esVC86f6a7oTaxPPlFUuwL/8KX/Uzo7mJJ/3G
uN/mTuK0jW3U+YGQzxOx55HA+UjoeSQJ3BWzV0TM9nLZ1krVCQF7XRq6LaEL
7j2R0l7KIrmndNRHhxnrAtVjoYbxQIs+0K0P9k0EBZawyELX1kuUNHQjezur
sLBSk0804RuaYHr1/k6dr1XjblK7GtTOulFnpdxeNmIvllrzJdYnYscDCXug
QnaiRtZrpzO7SSRIIt9dd82UUcGVlZUffvjh97///b/927/98Y9//Itf/GLu
3Ll79ux58eKFTqfz+XxTks8ShQNXCQTe7t27Qent3bs3NTV171dg3543IOS0
dVvSiuWLvlixZMnSlf/+2ap//MOKf/9sxS8/X/mbOWt+O2f1bz5f8st5S3/+
+dqfzVv/wbyVwJ99vvp3y7d8tmHPnI17wfIH/PGn61N/vSTp/TmrwcIxBH6y
cd9HSRl/SM74OCntkyQabe4GYNqcjWmfbcr8aEPGx9uPpT+qzxH7z/e7t1Xq
Npcobwx57g/Zc4T2k+UDSw/f/jD54B+3ZH2clPHJprRPKfdyTPuEMuPTjRmf
rUv7fGPmJxsP/HZD1rz9146UD2WP+G8Mu25JvXekvlsCx0MxNJjWzEf1n+06
+VFyFk0F+Wykds6GDCgJb6E8wE82ZH6adOCTpCzgltMPbjfK4JZ3X+K7M+y6
I3DeFzqg+mf3G5Mu5n2YfPQPSQc/3nTgk037+dymEgI37ocIEO13yUfTcuoe
CixQmNvD9ntiDxQMsoWfebVyaOORm39cn/nppqyPN2b+cV36nKT9lAlli+a/
ES7C/t9vypq/79KXRT3QUmUP2+8OO2jZxO67Yme2yJH5vO3TPed/v+nQZ0kH
P1ubMWd9Opcq7dWr98dN6f+xKQMu7xenci7WS6Ak9wZtD4c9OSLfA4E7Bzho
3XW7/HdJR/64+fAf4QrzPzNGuIwQAvxsYxZc/E+TD/9+45HfJh3fdb/udp/1
3rDnzrD7NtwQpf57w1Q2XGpUrjn1BHL7GPKJXpwM+utihI9/XLcPfjjkPGfz
gY/W75u34/CJvGb4jXChuMvlhR/7SOLKFTsO5bUtyrz20dYjv9+Y+Sn3N/14
w97JV56WEM71URK9/h8mH15x7N6ZKsFjkf2B0HZfDH9T722R657E9Uhk2Xa7
5FfbT/xH6tk5+y5CTLjCnyQd4F2O+5ngvZQfJaeBM8MZIcPtV17c7tTA7YBe
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
/9OP/vW3yz88fLWp/1Kr7Xz7+NkWS5qGPakyHZabk5rte2X2nc2WbTLzxkbT
B424niau6VBtiSpnIwvwqcKNhhkb+fpBmObIHRaPvHIQL+okkUjefvvt3//+
99HR0bm5uVarVafTbd269bnnnnvttdcSExPb29vppzriW3F8v4H67htfw+IH
NUiv0+3Wud0fKXRhmf2Ls5mQPDYoxwBJflkuuCgbnGfxz2YDsrjgDCsgMIsN
yGaW5bDB2cPLv1Y+ExT/z8/8+tl/+fmPnvndj/7o96ctV6K/7gjJGg3INgqA
QghAd6D1y9QD/LMMUDIBxGf64MPjAfU96n7gioJPAsSvPlz/BGlCX0IvT5wK
H3x4iPDPQQRLGP/04U0l2pzecTU7ozLg+pXNYy7p2GT14GTl4ETN8ASUNIA8
dd+mg2d+/dyiZ5791f/3s1+uTT37iWzwUpsz7dbEKY0FV3rCZRHYA8223TLb
dvyUxrSuwbSmnn2vhqy/U8lFlZpCs/pPKK39027bjPdn3Z7tMX0eQj94MRqN
xcXFX331VUNDg9lspjcSd3Z23rx5Mz09/e7du7Sk8W0Pd5vx/JyflDQTM+SL
SM7tzuk0x+UPL8vQBWWNBWdroaRZkmNckg55HkoRrGoCM23BGTZS1YDfMsHZ
o+HfaH4Zvev/fea3z/78l//003//P3/50v/1evx/7c4KvD4gzBHCTEHLGGih
CwA96IMPTxxCpUGd9lH3Bc7/GDrywYcnBahqoPXLGHsvZ+CqxtzEuOVGd7Nu
smnYUT8yXjfmLh+YzL9rLuu15bfrtqd9+p8vv/Xjf/3lT3/685/96j8/OPLR
XzT6sy22oyr7MZX1iMp8SGFObGb3SS07mywJjaaNjca1Dab36gDmqHJjdIU5
snAsNrPr2m2nlkxpU6J7asj2yKuaOV8kuVwum81G75YRfrhttVrp2pe+b50e
xUarmml6t/DMBOw7Z/DjGqXJvaN8JOhmf9CNQVrVLM1lF9+E9GsklYnRP9MM
CIBsnKXzz4biZygsvePf1p343//tpX/69R9/9PuX/7Rix592fr7oVM3Sr/uX
pmtpPTNnvoAdWtXMKXt88OGxYb7vCV76qN3S5/8+/BAAHg7TROg33UlVw0Wj
7gaDu2HU1Tjiquq3lvY6SgYmqkfc2W2G3Veyf/N26P/45X/86Jl//clPn/31
HxZtPv35py3GtBb7sdaJg0pritKcJDfvk7K7Gi3bGsybG4zrG/SrG9jl1cYV
tWxkqT6q3BSZ07elsKdEh+/Np8jMNuN5vPBjnVjJ3b9C0XKve4B9Vc2j2GhV
M4W/eoOqBqkfJ3dYjUy702TGmIzukJv9UNUsydBBVbMsk8FPFDNH/bJGl4Gv
QlrO0sI+wD9rMCx74JmNl//hnTV/iP7wZ++ueH7DYb/LNcu+vLPsxiD9NMZ/
9mf7NKVDwSMkdh98ePxY0PeoTz5qtxT8/4mT4IMPjw7g4YHZ+qDrvevz+651
TJbr3ZXDrppBe+2Iq3JouqjPld/rPJ7THLrr5JsrN/36xdd/9It//8ef/OI3
Ly/ddiX7oxbjSbXlkMaZorQkKsx7m827pOz2RuuWevOGeuOaBsPKelN4lT62
xoRVTbEhKrPzlEx3exKfKAvlzIynsHmcVY24VlnwJhnhF0+PUakf1jZDK8mZ
yZlpfAaQi9Q5Fre7YGBiq6Qr9EYPOOTiG2NLM4xLM/VLM8f8MgeWZQ3AztJM
3bLMsWWZI8syh+BIYObgfyQX/K99NyOv1v2vzWd/HJv8yrmyoOxev4wRwbeF
BC7MGpDVhcLGA70PPjxxLE1/HK4IvTyejnzw4YlgSYYWEr5/pjYwfSg6eyBJ
askddVeMuauGnZVDjoIefIBwXq/rS9XYlYq249eL34xa/b/eCfiPl5f9bsnK
bX8pP6dhjyi4JLmZljQ7ZCz+6KneuqmOW1NnXFXHRNdCVWNcXmGMKTVE5g3H
Zd/N7XMZ+F8/Tc7MTImrmsdWSMz5rEb4U1zw+AqbR7lNT01NuGdwSVP+mTXu
GafbfdvpPlTZF/r1HXBIv3T9kpv4ic2SjFEoYDxVDfVb3dKsoaVZA36ZQ299
3vnuZx0RN3pfP1b4jzGH/n3vX5Z90+afNUyrlyU3xwDiYkaAuMh54mHoww8K
96or6HHxSw+3AhHki8X6KhwfvmeAqmZZln7JjeHAzNGAjJF1JfrPe9zlendJ
n61i0C7psuX2jGd0ODI7bAUdbPIX+f4bd204emnD8c+Wbj+9PUN+Umk+rORS
lJb9zabdzVjSbALUWeJrzatqTbE1puW1bHglflATXaRbntW/u3JEwblt/M+4
J4QH1Mw89p8X3asvYWFuX0nzyLZpLGinXVjVkDvGpwjtUOjq3e4v25gVWb1L
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
v4+koZmDofnasAJtRIE2XKIPlZgC87EoCi7QhhSMQS0EV6HzF/rwbQh4EDxx
becAxvfvArS6oPshhZifobBZlj28NGdsmUTnX2AIKDT+VUAahwQOJQ1URNDC
PohCD5don7iBPvjwN+CB8g+N9/ASk3++FgDTBB4pMgUWmEILzUGZgxFfqv5z
Y9p/bzy6K099RGXZK7PubLZ8KOMSGs1bG7gtDdb4WsuKKja22hpZaYmo4KLK
uOWl5uWFBnhrHFWsW186VKB1D9PvnsgXTFPuSZdwd41Q0pDfd8941rv0bd//
bfaTashGq5pJ4ThdQ6F7yn21zbRa0h2UO4wfSOazAUX2wEIuIGc0olgbUTgY
VjgYWDQSWKzDlI5vS42RhbrI3N4/Hsr+p+jUVw9lL8/sDs8fCZSMBhcbQwuY
kALWv8jiV8z5FzNwFSR8AuaRghRO9wt8P34fk9fjRGDBwggqZOYjsOipQ9Aj
Ht9H7TPvZg4vyR6Ft5yUc0jRyPNCA0E/zMGftWbrAnINpKTxCnxYfvvEyfFh
QYQWmb6XCL4H7pV//IqMQWVmaCF3hRYZ8Q1CMX62DzuReYNvnyv68XtJixI/
21bae0A5uVMxubPZta2J21Jv3FRv2Finj6/Vr65hYqu4sHJLRPVEUJklpIRZ
WWKITu9IKB7IGnJr3bg+ApnI8KMYqFvo109kXpt2T08LVc3Uk1i827c9gU30
mJpJb2FDqhq6Rx8yTZbz5tzuFof7hFwfm9MVmjMYUcoGFrHBJVxkKRNaMBJZ
OBJWOIwf1JSwgaUcuC5+DwUlenbfks8UP4079m/rT4V/o4kh5wSWshgIxWb/
EotfKcAUUGIMLtaHFgGMBKZH1IYVs2HFzH22EEFgTvDT1IYQre6/fRp0nqP/
/fP/9LSC/wRK9H4S/OAFWqwritGjaAtsh5eYw8pYaOFtaUCebln2KLRwCZwJ
l4ulzZY/H/er26OLlIcbX0+Dbo+zJbWN4fvXYrlSdL9tYJEhsNzsj+ndFFJq
DivSw6QAaR9SQUSJITK3+/d7P/5JXOo75wtXSrriypnNTVNbpa6tMsdmqXl9
nW5N1VBc9ch7VfqoShaqmsAyG0wcYQXamMzb2/PvpN+1D5OSZtI9/7256D6K
6WlfVfPD2mhBSz7BcwmDTu6o8awJxZ84RY5Y3G7VuDtNpY/LuRWa2RmYPxJS
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
diYXLTCCIAiCIAjy1Pw/TBCMRA==
    "], {{0, 223}, {754, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIj
UFAFpJaBSSWxoCCHBcjKzSspCnJ3UoiIjFJgf8jADoS8DGIMConJxQWOAQE+
INUwGhV8u8YAMpDhsi7IrFNSU5tU6wV8LWYKX734SrQJUz0K4EpJLU4G0n+A
ODW5oKiEgYExBchWLi8pALE7gGyRIqCjgOw5IHY6hL0BxE6CsI+A1YQEOQPZ
N4BsheSMRKAZjD+AbJ0kJPF0JDbUXhDgdsksLshJrFQIMCbgWjJASWpFCYh2
zi+oLMpMzyhRcASGUqqCZ16yno6CkYGhOQMDKMwhqj8HgsOSUewMQqz5PgOD
7f7////vRoh57Wdg2AjUybUTIaZhwcAgyM3AcGJnQWJRIliIGYiZ0tIYGD4t
Z2DgjWRgEL4A1BNdnGZsBJZn5HFiYGC99///ZzUGBvbJDAx/J/z//3vR//9/
FwM132FgOJAHACk3cm0=
      "], "RGB", "XYZ"], Interleaving -> True, 
    MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Orientation" -> 
        Association["CameraTopOrientation" -> Top, "Mirrored" -> False], 
        "XResolution" -> 144, "YResolution" -> 144, "ResolutionUnit" -> 
        "inch", "PixelXDimension" -> 1668, "PixelYDimension" -> 2224]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{451., Automatic},
  ImageSizeRaw->{754, 223},
  PlotRange->{{0, 754}, {0, 223}}]], "Text",
 CellChangeTimes->{{3.7470900572437363`*^9, 3.747090066822781*^9}, {
  3.747098856147561*^9, 3.7470988765558643`*^9}, {3.747099727707633*^9, 
  3.747099753211289*^9}},ExpressionUUID->"8b4004c5-5505-43bf-a95f-\
8e3b1b68e499"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Alpha]", "2"], 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], "u"}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["x", "2"]}]]}], "\[Equal]", 
   FractionBox[
    RowBox[{"\[PartialD]", "u"}], 
    RowBox[{"\[PartialD]", "t"}]]}], 
  RowBox[{"(*", "eq1", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SCMAF", "[", 
   RowBox[{"%", ",", "RA", ",", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{"u", "\[Equal]", 
       RowBox[{
        RowBox[{"X", "[", "x", "]"}], 
        RowBox[{"T", "[", "t", "]"}]}]}]}], "}"}], ",", 
    RowBox[{"Post", "\[Rule]", "SCEvalDeriv"}], ",", "\[IndentingNewLine]", 
    "SCDivEq", ",", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], 
       RowBox[{"X", "[", "x", "]"}], 
       RowBox[{"T", "[", "t", "]"}]}]}], "}"}], ",", 
    RowBox[{"Post", "\[Rule]", "SCAbbrevFunc"}]}], "]"}], 
  RowBox[{"(*", "eq7", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.747086805729862*^9, 3.747086817287073*^9}, {
  3.747086889285255*^9, 3.747087009471465*^9}, {3.747087044757423*^9, 
  3.747087049100512*^9}, {3.747087228343511*^9, 3.747087267642728*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"83a1e24a-199f-4c9a-93e7-941dea5b5ca6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Alpha]", "2"], " ", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], "u"}], 
    RowBox[{"\[PartialD]", 
     SuperscriptBox["x", "2"]}]]}], "\[Equal]", 
  FractionBox[
   RowBox[{"\[PartialD]", "u"}], 
   RowBox[{"\[PartialD]", "t"}]]}]], "Output",
 CellChangeTimes->{
  3.7470868185716753`*^9, 3.7470869162496967`*^9, {3.747086972318706*^9, 
   3.7470870102450027`*^9}, 3.7470870494402313`*^9, {3.7470872428117332`*^9, 
   3.747087268034299*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"83a18374-5636-44f4-9572-e3aa3d4bc4cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Alpha]", "2"], " ", 
   RowBox[{"T", "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["X", "\[Prime]\[Prime]"], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"X", "[", "x", "]"}], " ", 
   RowBox[{
    SuperscriptBox["T", "\[Prime]"], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.747087268080174*^9},ExpressionUUID->"57b59356-4415-48a0-96a9-\
239976bcf5c8"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["X", "\[Prime]\[Prime]"], "X"], "\[Equal]", 
  FractionBox[
   SuperscriptBox["T", "\[Prime]"], 
   RowBox[{"T", " ", 
    SuperscriptBox["\[Alpha]", "2"]}]]}]], "Output",
 CellChangeTimes->{
  3.7470868185716753`*^9, 3.7470869162496967`*^9, {3.747086972318706*^9, 
   3.7470870102450027`*^9}, 3.7470870494402313`*^9, {3.7470872428117332`*^9, 
   3.747087268177802*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"fd64f7a4-d3ba-4ed0-acc7-735a1210f3d8"]
}, Open  ]],

Cell["\<\
It is necessary that both sides of Eq. 7 be equal to the same constant, -\
\[Sigma].\
\>", "Text",
 CellChangeTimes->{{3.747087167834326*^9, 
  3.747087189110392*^9}},ExpressionUUID->"8d3384a2-0915-4f04-a54c-\
baf4eedf6195"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     SuperscriptBox["X", "\[Prime]\[Prime]"], "X"], "\[Equal]", 
    RowBox[{"-", "\[Sigma]"}]}], ",", 
   RowBox[{
    FractionBox[
     SuperscriptBox["T", "\[Prime]"], 
     RowBox[{"T", " ", 
      SuperscriptBox["\[Alpha]", "2"]}]], "\[Equal]", 
    RowBox[{"-", "\[Sigma]"}]}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SCMAF", "[", 
   RowBox[{
   "%", ",", "FullSimplify", ",", "All", ",", "\[IndentingNewLine]", 
    "SCMultEq", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"At", "[", "1", "]"}], ",", "X"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"At", "[", "2", "]"}], ",", 
        RowBox[{"T", " ", 
         SuperscriptBox["\[Alpha]", "2"]}]}], "}"}]}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"eq9", ",", "eq10"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.747087073362*^9, 3.747087141090989*^9}, {
  3.747087198985361*^9, 3.7470872241342173`*^9}, {3.747087276069643*^9, 
  3.747087304486814*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"012718b7-cbea-413e-9d7d-3d3cb3c3c98f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     SuperscriptBox["X", "\[Prime]\[Prime]"], "X"], "\[Equal]", 
    RowBox[{"-", "\[Sigma]"}]}], ",", 
   RowBox[{
    FractionBox[
     SuperscriptBox["T", "\[Prime]"], 
     RowBox[{"T", " ", 
      SuperscriptBox["\[Alpha]", "2"]}]], "\[Equal]", 
    RowBox[{"-", "\[Sigma]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7470872072513523`*^9, 3.747087225350788*^9}, {
  3.7470872830678053`*^9, 3.747087304805575*^9}},
 CellLabel->"Out[55]=",ExpressionUUID->"6d336287-cf5b-4614-b5ac-f86c679933c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Sigma]", "+", 
     FractionBox[
      SuperscriptBox["X", "\[Prime]\[Prime]"], "X"]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Sigma]", "+", 
     FractionBox[
      SuperscriptBox["T", "\[Prime]"], 
      RowBox[{"T", " ", 
       SuperscriptBox["\[Alpha]", "2"]}]]}], "\[Equal]", "0"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.747087304837913*^9},ExpressionUUID->"377709c7-914e-4905-b1f5-\
ffdffaba81ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"X", " ", "\[Sigma]"}], "+", 
     SuperscriptBox["X", "\[Prime]\[Prime]"]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"T", " ", 
      SuperscriptBox["\[Alpha]", "2"], " ", "\[Sigma]"}], "+", 
     SuperscriptBox["T", "\[Prime]"]}], "\[Equal]", "0"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.7470872072513523`*^9, 3.747087225350788*^9}, {
  3.7470872830678053`*^9, 3.747087304864401*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"fcdf2f96-65fe-44ae-ba10-a489e197dce3"]
}, Open  ]],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sigma]", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "1545c262-ec5b-43dc-85bb-80948e5910d0"],
 "."
}], "Text",
 CellChangeTimes->{{3.747087382419058*^9, 
  3.74708738864874*^9}},ExpressionUUID->"aa77c684-73d2-401d-92b1-\
7ebbb116e9e5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"X", " ", "\[Sigma]"}], "+", 
   SuperscriptBox["X", "\[Prime]\[Prime]"]}], "\[Equal]", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{"SCMAF", "[", 
  RowBox[{"%", ",", "RA", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"At", "[", "1", "]"}], ",", 
     RowBox[{"\[Sigma]", "\[Equal]", "0"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "SCDSolve", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", "X", ",", "x", ",", 
     RowBox[{"ReplConst", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["k", "1"], ",", 
        SubscriptBox["k", "2"]}], "}"}]}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747087359575767*^9, 3.74708742561202*^9}, {
  3.747087543223366*^9, 3.747087543529892*^9}, {3.74708823663973*^9, 
  3.7470882469970627`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"09447f57-0b7f-4d74-911b-364118221ad5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"X", " ", "\[Sigma]"}], "+", 
   SuperscriptBox["X", "\[Prime]\[Prime]"]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.7470873681467657`*^9, {3.747087398980962*^9, 3.747087425864156*^9}, 
   3.747087543810718*^9, 3.7470882473603067`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"a3f384fa-5e5c-4150-855d-ace09bddfcb5"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["X", "\[Prime]\[Prime]"], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.747088247439474*^9},ExpressionUUID->"829652b7-5036-4cb6-88d9-\
a836b46831c6"],

Cell[BoxData[
 RowBox[{"X", "\[Equal]", 
  RowBox[{
   SubscriptBox["k", "1"], "+", 
   RowBox[{"x", " ", 
    SubscriptBox["k", "2"]}]}]}]], "Output",
 CellChangeTimes->{
  3.7470873681467657`*^9, {3.747087398980962*^9, 3.747087425864156*^9}, 
   3.747087543810718*^9, 3.747088247541101*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"f4d9edd3-a932-4204-a9fe-37d3b68247c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"X", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"X", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}], 
  RowBox[{"(*", "eq4", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"SCMAF", "[", 
  RowBox[{"%", ",", "RA", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"X", "[", "x_", "]"}], "\[Equal]", 
      RowBox[{
       SubscriptBox["k", "1"], "+", 
       RowBox[{"x", " ", 
        SubscriptBox["k", "2"]}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   "SCSolve", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["k", "1"], ",", 
       SubscriptBox["k", "2"]}], "}"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747087414714323*^9, 3.7470874706435747`*^9}, {
  3.747087614368009*^9, 3.747087615876507*^9}, {3.747088253473164*^9, 
  3.7470882595993423`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"bf08d174-57a3-4e89-9df6-be79457bfb49"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"X", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.747087444388295*^9, 3.747087470981853*^9}, 
   3.747088260106514*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"5e033be6-aa20-4c31-8d1b-e065f04007c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["k", "1"], "+", 
     RowBox[{"L", " ", 
      SubscriptBox["k", "2"]}]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.747088260226866*^9},ExpressionUUID->"3edd881e-191f-4a8f-9610-\
78a6eec13b3b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Equal]", "0"}], ",", 
   RowBox[{
    SubscriptBox["k", "2"], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.747087444388295*^9, 3.747087470981853*^9}, 
   3.747088260317082*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"d54a4513-3347-4da4-9a89-54c4ec0e7261"]
}, Open  ]],

Cell["Only, a trivial solution exists.", "Text",
 CellChangeTimes->{{3.747087480826981*^9, 
  3.747087493912094*^9}},ExpressionUUID->"6782536e-7732-4370-881e-\
dabfa762f721"],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sigma]", "<", "0"}], TraditionalForm]],ExpressionUUID->
  "25c5197a-32f4-492a-9c3f-86971cdd9e5c"],
 ", let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sigma]", "=", 
    RowBox[{"-", 
     SuperscriptBox["\[Lambda]", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "0c2f92a9-5d0e-4367-a391-3a0184a0f579"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "974a9d19-db5e-4e7c-9949-540c5d9d581e"],
 "."
}], "Text",
 CellChangeTimes->{{3.747087382419058*^9, 3.74708738864874*^9}, {
  3.747087507317589*^9, 3.747087507319387*^9}, {3.747087998429125*^9, 
  3.7470880159142714`*^9}},ExpressionUUID->"ce7d43fe-91ba-4e88-91cc-\
77c819fb92f4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"X", " ", "\[Sigma]"}], "+", 
   SuperscriptBox["X", "\[Prime]\[Prime]"]}], "\[Equal]", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{"SCMAF", "[", 
  RowBox[{"%", ",", "RA", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"At", "[", "1", "]"}], ",", 
     RowBox[{"\[Sigma]", "\[Equal]", 
      RowBox[{"-", 
       SuperscriptBox["\[Lambda]", "2"]}]}]}], 
    RowBox[{"(*", 
     RowBox[{"\[Lambda]", ">", "0"}], "*)"}], "}"}], ",", 
   "\[IndentingNewLine]", "SCDSolve", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", "X", ",", "x", ","}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747087359575767*^9, 3.74708742561202*^9}, {
  3.7470875158859262`*^9, 3.747087539648899*^9}, {3.747087988321825*^9, 
  3.747087990072526*^9}, {3.747088269353774*^9, 
  3.747088269657948*^9}},ExpressionUUID->"a185bec8-af45-428c-92ae-\
834daa4bd3ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"X", " ", "\[Sigma]"}], "+", 
   SuperscriptBox["X", "\[Prime]\[Prime]"]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.747087540091504*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"aa48b8e5-fb31-43eb-8875-c63cc1432baa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "X"}], " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "+", 
   SuperscriptBox["X", "\[Prime]\[Prime]"]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.747087540133223*^9},ExpressionUUID->"a8b5ace7-905c-49d3-aa5c-\
2937623f8cd9"],

Cell[BoxData[
 RowBox[{"X", "\[Equal]", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"x", " ", "\[Lambda]"}]], " ", 
    RowBox[{"C", "[", "1", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "x"}], " ", "\[Lambda]"}]], " ", 
    RowBox[{"C", "[", "2", "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.747087540238596*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"c2a663ed-0b29-461c-942b-71a90a5864b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"X", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"X", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}], 
  RowBox[{"(*", "eq4", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"SCMAF", "[", 
  RowBox[{"%", ",", "RA", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"X", "[", "x_", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"x", " ", "\[Lambda]"}]], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "x"}], " ", "\[Lambda]"}]], " ", 
        RowBox[{"C", "[", "2", "]"}]}]}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", "SCSolve", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], ",", 
       RowBox[{"C", "[", "2", "]"}]}], "}"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7470875350694036`*^9, 3.7470875470851593`*^9}, {
  3.7470876235935497`*^9, 
  3.747087628905665*^9}},ExpressionUUID->"d510e2f7-6c50-4d3c-bbe2-\
99eadfce3681"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"X", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.747087547322171*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"7d2de732-8567-41fd-87e4-93424304babb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "+", 
     RowBox[{"C", "[", "2", "]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"L", " ", "\[Lambda]"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "L"}], " ", "\[Lambda]"}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}], "\[Equal]", "0"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.747087547422701*^9},ExpressionUUID->"e06b21c2-ec03-4542-953a-\
94735aa9a2d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"C", "[", "1", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"C", "[", "2", "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.747087547508421*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"bd0c41b2-2e12-4639-aa20-d91bbab12836"]
}, Open  ]],

Cell["Also, a trivial solution is the only solution.", "Text",
 CellChangeTimes->{{3.747087480826981*^9, 3.747087493912094*^9}, {
  3.747087555893718*^9, 
  3.747087569082398*^9}},ExpressionUUID->"03f06675-a239-49db-b30e-\
ed533057dc98"],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sigma]", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "cf5acd5d-c333-4298-a08d-a84cf26c3989"],
 ", let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sigma]", "=", 
    SuperscriptBox["\[Lambda]", "2"]}], TraditionalForm]],ExpressionUUID->
  "840073ae-e8d0-4096-a7ee-48d093e1b29d"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "5ee68e6e-648f-43bd-87e6-609f29519fec"],
 "."
}], "Text",
 CellChangeTimes->{{3.747087382419058*^9, 3.74708738864874*^9}, {
  3.747087507317589*^9, 3.747087507319387*^9}, {3.74708757740213*^9, 
  3.747087577404146*^9}, {3.747088024296753*^9, 
  3.7470880319426937`*^9}},ExpressionUUID->"6443054d-b250-4708-b538-\
cdd635094172"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"X", " ", "\[Sigma]"}], "+", 
   SuperscriptBox["X", "\[Prime]\[Prime]"]}], "\[Equal]", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{"SCMAF", "[", 
  RowBox[{"%", ",", "RA", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"At", "[", "1", "]"}], ",", 
     RowBox[{"\[Sigma]", "\[Equal]", 
      SuperscriptBox["\[Lambda]", "2"]}]}], 
    RowBox[{"(*", 
     RowBox[{"\[Lambda]", ">", "0"}], "*)"}], "}"}], ",", 
   "\[IndentingNewLine]", "SCDSolve", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", "X", ",", "x", ",", 
     RowBox[{"ReplConst", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["k", "1"], ",", 
        SubscriptBox["k", "2"]}], "}"}]}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747087359575767*^9, 3.74708742561202*^9}, {
   3.7470875158859262`*^9, 3.747087539648899*^9}, 3.7470875905863953`*^9, {
   3.747087978322215*^9, 3.747087981270656*^9}, 3.747088034133232*^9, {
   3.747088157125122*^9, 3.747088165716743*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"6aed628f-40ff-4307-87aa-cc642732e313"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"X", " ", "\[Sigma]"}], "+", 
   SuperscriptBox["X", "\[Prime]\[Prime]"]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.7470875909524508`*^9, 3.747088166210449*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"09e6e206-efee-48ed-ae21-c94e8e744816"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"X", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "+", 
   SuperscriptBox["X", "\[Prime]\[Prime]"]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.747088166311195*^9},ExpressionUUID->"796cb0f7-a0b6-4b43-88b2-\
9315cfd8a455"],

Cell[BoxData[
 RowBox[{"X", "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"x", " ", "\[Lambda]"}], "]"}], " ", 
    SubscriptBox["k", "1"]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"x", " ", "\[Lambda]"}], "]"}], " ", 
    SubscriptBox["k", "2"]}]}]}]], "Output",
 CellChangeTimes->{3.7470875909524508`*^9, 3.7470881664340076`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"bab09962-05a2-4fcb-b677-57686b54395f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"X", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"X", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}], 
  RowBox[{"(*", "eq4", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"SCMAF", "[", 
  RowBox[{"%", ",", "RA", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"X", "[", "x_", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"x", " ", "\[Lambda]"}], "]"}], " ", 
        SubscriptBox["k", "1"]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"x", " ", "\[Lambda]"}], "]"}], " ", 
        SubscriptBox["k", "2"]}]}]}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747087632318677*^9, 3.747087644809176*^9}, {
   3.747087690530547*^9, 3.7470877113178043`*^9}, 3.7470881738213673`*^9},
 CellLabel->"In[95]:=",ExpressionUUID->"26c89f04-9293-4ff5-8aa0-165da754e37d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"X", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.747087645361928*^9, {3.7470876918768187`*^9, 3.747087711729929*^9}, 
   3.7470881746724167`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"4ffbe4b8-c671-4b86-9419-2e07290ed477"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"L", " ", "\[Lambda]"}], "]"}], " ", 
      SubscriptBox["k", "1"]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"L", " ", "\[Lambda]"}], "]"}], " ", 
      SubscriptBox["k", "2"]}]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.747087645361928*^9, {3.7470876918768187`*^9, 3.747087711729929*^9}, 
   3.747088174783452*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"daf55828-210e-4a25-b1ad-b1e41743aa91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"L", " ", "\[Lambda]"}], "]"}], " ", 
    SubscriptBox["k", "1"]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"L", " ", "\[Lambda]"}], "]"}], " ", 
    SubscriptBox["k", "2"]}]}], "\[Equal]", "0"}], "\[IndentingNewLine]", 
 RowBox[{"SCMAF", "[", 
  RowBox[{"%", ",", "RA", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"At", "[", "1", "]"}], ",", 
     RowBox[{
      SubscriptBox["k", "1"], "\[Equal]", "0"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "SCReduce", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", "\[Lambda]"}], "}"}], ",", 
   RowBox[{"Post", "\[Rule]", "FullSimplify"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747087717266363*^9, 3.7470877443931103`*^9}, {
  3.747087874605659*^9, 3.747087887448435*^9}, {3.747087919724594*^9, 
  3.747087929592663*^9}, {3.7470881899305487`*^9, 3.747088209077353*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"fa45fe7b-0abc-4851-909d-f2d5667c9d30"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"L", " ", "\[Lambda]"}], "]"}], " ", 
    SubscriptBox["k", "1"]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"L", " ", "\[Lambda]"}], "]"}], " ", 
    SubscriptBox["k", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{{3.7470877277741613`*^9, 3.747087744729521*^9}, {
  3.7470878826971073`*^9, 3.747087887749824*^9}, {3.747088203071475*^9, 
  3.747088209402068*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"78c2e218-ab4c-44b9-a6dc-1f965acaa330"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"L", " ", "\[Lambda]"}], "]"}], " ", 
   SubscriptBox["k", "2"]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.747088209430834*^9},ExpressionUUID->"2a0b9246-9c41-4c7d-82ee-\
4bf5c6f6b761"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"L", "\[Equal]", "0"}], "||", 
      RowBox[{"\[Lambda]", "\[Equal]", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "1", "]"}]}], "L"]}], "||", 
      RowBox[{"\[Lambda]", "\[Equal]", 
       FractionBox[
        RowBox[{"\[Pi]", "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
          RowBox[{"C", "[", "1", "]"}]}]}], "L"]}]}], ")"}]}], ")"}], "||", 
  RowBox[{
   SubscriptBox["k", "2"], "\[Equal]", "0"}]}]], "Output",
 CellChangeTimes->{{3.7470877277741613`*^9, 3.747087744729521*^9}, {
  3.7470878826971073`*^9, 3.747087887749824*^9}, {3.747088203071475*^9, 
  3.747088209542329*^9}},
 CellLabel->
  "Out[100]=",ExpressionUUID->"1b17dc92-9912-43e0-bc12-60ed35a288a9"]
}, Open  ]],

Cell[TextData[{
 "Thus, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"L", " ", "\[Lambda]"}], "=", 
    RowBox[{"n", " ", "\[Pi]"}]}], TraditionalForm]],ExpressionUUID->
  "ad1563ea-7d51-4c67-8771-13a284f0f843"],
 " and "
}], "Text",
 CellChangeTimes->{{3.747087906721138*^9, 3.7470879180980473`*^9}, 
   3.747087948271584*^9, {3.747088052924569*^9, 3.747088052924685*^9}, {
   3.747089198509741*^9, 
   3.747089200290941*^9}},ExpressionUUID->"3d6863c2-1a57-420e-9ffa-\
397a3e0f5519"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"X", "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"x", " ", "\[Lambda]"}], "]"}], " ", 
    SubscriptBox["k", "1"]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"x", " ", "\[Lambda]"}], "]"}], " ", 
    SubscriptBox["k", "2"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"SCMAF", "[", 
  RowBox[{"%", ",", "SCEliminate", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"At", "[", "2", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["k", "1"], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"L", " ", "\[Lambda]"}], "\[Equal]", 
        RowBox[{"n", " ", "\[Pi]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["k", "1"], ",", "\[Lambda]"}], "}"}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.74708919518787*^9, 3.7470892408581343`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"bb3292ec-94bf-4641-976d-e18b00f85b4b"],

Cell[BoxData[
 RowBox[{"X", "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"x", " ", "\[Lambda]"}], "]"}], " ", 
    SubscriptBox["k", "1"]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"x", " ", "\[Lambda]"}], "]"}], " ", 
    SubscriptBox["k", "2"]}]}]}]], "Output",
 CellChangeTimes->{3.747089241190192*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"01ddcecb-314c-4ad1-b7d2-6beba3975d39"],

Cell[BoxData[
 RowBox[{"X", "\[Equal]", 
  RowBox[{
   SubscriptBox["k", "2"], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}]}]], "Output",
 CellChangeTimes->{3.747089241302326*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"4287b4a3-d252-4573-9e91-858c3597bb13"]
}, Open  ]],

Cell[TextData[{
 "If we substitute ",
 Cell[BoxData[
  FormBox["L", TraditionalForm]],ExpressionUUID->
  "ee501477-e8ea-4d16-9dd4-8c4ee2cf3ec2"],
 " into the Eq. 9,"
}], "Text",
 CellChangeTimes->{{3.747089114326559*^9, 
  3.747089133189061*^9}},ExpressionUUID->"8eed72fc-cbcf-428c-a95c-\
2a120ee4aaba"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"X", " ", "\[Sigma]"}], "+", 
    SuperscriptBox["X", "\[Prime]\[Prime]"]}], "\[Equal]", "0"}], 
  RowBox[{"(*", "eq9", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SCMAF", "[", 
   RowBox[{"%", ",", "SCAbbrevDeriv", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"At", "[", "1", "]"}], ",", 
      RowBox[{"Functions", "\[Rule]", 
       RowBox[{"X", "[", "x", "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    "RA", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"At", "[", "1", "]"}], ",", 
      RowBox[{"X", "\[Equal]", 
       RowBox[{
        SubscriptBox["k", "2"], " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}]}]}], "}"}], 
    ",", 
    RowBox[{"Post", "\[Rule]", "SCEvalDeriv"}], ",", "\[IndentingNewLine]", 
    "SCSolve", ",", 
    RowBox[{"{", 
     RowBox[{"All", ",", "\[Sigma]"}], "}"}]}], "]"}], 
  RowBox[{"(*", "eq23", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.747089145673311*^9, 3.7470891541381397`*^9}, {
  3.747089187106439*^9, 3.7470891873328247`*^9}, {3.747089246164818*^9, 
  3.7470893540050592`*^9}, {3.747089394911026*^9, 3.747089407178184*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"392241e6-6178-40e9-82fb-bfa6225ef953"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"X", " ", "\[Sigma]"}], "+", 
   SuperscriptBox["X", "\[Prime]\[Prime]"]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.74708924771308*^9, {3.747089312071643*^9, 3.7470893542117777`*^9}, {
   3.747089396460844*^9, 3.7470894076044416`*^9}},
 CellLabel->
  "Out[119]=",ExpressionUUID->"e52ec680-a60e-47f5-bffd-5d30a62ea850"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["n", "2"], " ", 
       SuperscriptBox["\[Pi]", "2"], " ", 
       SubscriptBox["k", "2"]}], 
      SuperscriptBox["L", "2"]]}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], "+", 
   RowBox[{
    RowBox[{"\[Sigma]", " ", 
     SubscriptBox["k", "2"]}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{
  3.747089407628872*^9},ExpressionUUID->"0025022c-0f98-4022-887b-\
f853f75ffd0c"],

Cell[BoxData[
 RowBox[{"\[Sigma]", "\[Equal]", 
  FractionBox[
   RowBox[{
    SuperscriptBox["n", "2"], " ", 
    SuperscriptBox["\[Pi]", "2"]}], 
   SuperscriptBox["L", "2"]]}]], "Output",
 CellChangeTimes->{
  3.74708924771308*^9, {3.747089312071643*^9, 3.7470893542117777`*^9}, {
   3.747089396460844*^9, 3.747089407675708*^9}},
 CellLabel->
  "Out[120]=",ExpressionUUID->"af4435bc-e174-4d8a-8008-fa83869403ee"]
}, Open  ]],

Cell[TextData[{
 "The values of ",
 Cell[BoxData[
  FormBox["\[Sigma]", TraditionalForm]],ExpressionUUID->
  "e1dd41d4-6d98-4cee-aca6-c09266c9c702"],
 " given in Eq.(23), for which nontrivial solutions exist, are called ",
 StyleBox["eigenvalues",
  FontWeight->"Bold"],
 " of the boundary value problem. The corresponding nontrivial solutions \
X(x), which are proportional to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sin", "(", 
    RowBox[{"n\[Pi]x", "/", "L"}], ")"}], TraditionalForm]],ExpressionUUID->
  "a6ddbc5d-9f6e-4433-b652-45eb4399b708"],
 ", aare called ",
 StyleBox["eigenfuncitons.",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.7470893853787317`*^9, 3.747089392150312*^9}, {
  3.747089423039667*^9, 
  3.747089494470007*^9}},ExpressionUUID->"357bca80-6a0b-4467-8a18-\
68dce23ee538"],

Cell["Substituting for \[Sigma] in Eq.(10), ", "Text",
 CellChangeTimes->{{3.747089509070326*^9, 
  3.747089521708769*^9}},ExpressionUUID->"05b2f3c4-5a01-4a50-b447-\
1ee87a7782f1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"T", " ", 
     SuperscriptBox["\[Alpha]", "2"], " ", "\[Sigma]"}], "+", 
    SuperscriptBox["T", "\[Prime]"]}], "\[Equal]", "0"}], 
  RowBox[{"(*", "eq10", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"SCMAF", "[", 
  RowBox[{"%", ",", "RA", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"At", "[", "1", "]"}], ",", 
     RowBox[{"\[Sigma]", "\[Equal]", 
      FractionBox[
       RowBox[{
        SuperscriptBox["n", "2"], " ", 
        SuperscriptBox["\[Pi]", "2"]}], 
       SuperscriptBox["L", "2"]]}]}], 
    RowBox[{"(*", "eq23", "*)"}], "}"}], ",", "\[IndentingNewLine]", 
   "SCDSolve", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", "T", ",", "t"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747089541590706*^9, 3.747089547809497*^9}, {
  3.747090121052745*^9, 3.74709016387409*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"579812ed-115c-468e-a095-7a43bdc57070"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T", " ", 
    SuperscriptBox["\[Alpha]", "2"], " ", "\[Sigma]"}], "+", 
   SuperscriptBox["T", "\[Prime]"]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.7470895480603933`*^9, {3.747090127513232*^9, 3.7470901641713343`*^9}},
 CellLabel->
  "Out[127]=",ExpressionUUID->"4aa217b9-2cef-4d4a-a29d-ef0f7738cf9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["n", "2"], " ", 
     SuperscriptBox["\[Pi]", "2"], " ", "T", " ", 
     SuperscriptBox["\[Alpha]", "2"]}], 
    SuperscriptBox["L", "2"]], "+", 
   SuperscriptBox["T", "\[Prime]"]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.7470901641909857`*^9},ExpressionUUID->"270be84f-efb1-4edc-ab02-\
a8e8b18637a6"],

Cell[BoxData[
 RowBox[{"T", "\[Equal]", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["n", "2"], " ", 
       SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], 
      SuperscriptBox["L", "2"]]}]], " ", 
   RowBox[{"C", "[", "1", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7470895480603933`*^9, {3.747090127513232*^9, 3.747090164222342*^9}},
 CellLabel->
  "Out[128]=",ExpressionUUID->"40df6b88-bb61-4b67-89d5-2a673183f930"]
}, Open  ]],

Cell["The fundamental solutions is", "Text",
 CellChangeTimes->{{3.747090210755733*^9, 3.7470902224830112`*^9}, {
  3.747090384258856*^9, 
  3.7470903843283463`*^9}},ExpressionUUID->"47ac230f-f42f-48f0-b0d4-\
dca09db8f047"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["u", "n"], "[", 
   RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{
    SubscriptBox["X", "n"], "[", "x", "]"}], 
   RowBox[{
    SubscriptBox["T", "n"], "[", "t", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SCMAF", "[", 
   RowBox[{"%", ",", "RA", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"At", "[", "2", "]"}], ",", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["X", "n"], "[", "x", "]"}], "\[Equal]", " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], ",", 
        RowBox[{
         RowBox[{
          SubscriptBox["T", "n"], "[", "t", "]"}], "\[Equal]", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["n", "2"], " ", 
             SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
             SuperscriptBox["\[Alpha]", "2"]}], 
            SuperscriptBox["L", "2"]]}]]}]}], "}"}]}], "}"}]}], "]"}], 
  RowBox[{"(*", "eq17", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7470902238052588`*^9, 3.74709033342977*^9}, {
  3.7470954311458063`*^9, 
  3.747095432206169*^9}},ExpressionUUID->"bfedafd2-3b79-4f6b-842f-\
d73b1930452a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["u", "n"], "[", 
   RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{
    SubscriptBox["T", "n"], "[", "t", "]"}], " ", 
   RowBox[{
    SubscriptBox["X", "n"], "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.747090319366596*^9, 3.7470903337119217`*^9}},
 CellLabel->
  "Out[133]=",ExpressionUUID->"78291eca-f548-4689-8092-eb323163ea14"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["u", "n"], "[", 
   RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["n", "2"], " ", 
       SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], 
      SuperscriptBox["L", "2"]]}]], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.747090319366596*^9, 3.7470903337676697`*^9}},
 CellLabel->
  "Out[134]=",ExpressionUUID->"ec11c1e7-4a74-4a92-8818-a2d95f8f8205"]
}, Open  ]],

Cell["The general linear combination of the functions is", "Text",
 CellChangeTimes->{{3.747090372195353*^9, 3.7470903789934797`*^9}, {
  3.747095381198802*^9, 
  3.747095389852586*^9}},ExpressionUUID->"72f01a9e-b41c-452d-aaab-\
d5248a23cb2f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "1"}], "\[Infinity]"], 
   RowBox[{
    SubscriptBox["c", "n"], 
    RowBox[{
     SubscriptBox["u", "n"], "[", 
     RowBox[{"x", ",", "t"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SCMAF", "[", 
   RowBox[{"%", ",", "RA", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"At", "[", "2", "]"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["u", "n"], "[", 
        RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["n", "2"], " ", 
            SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
            SuperscriptBox["\[Alpha]", "2"]}], 
           SuperscriptBox["L", "2"]]}]], " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}]}]}], "}"}]}], 
   "]"}], 
  RowBox[{"(*", "eq19", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.747090388143908*^9, 3.747090428470191*^9}, {
  3.7470954360053988`*^9, 3.747095437207334*^9}, {3.747096022655264*^9, 
  3.747096025961878*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"3938b533-62e9-49b7-ba37-2d6eab1187f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "1"}], "\[Infinity]"], 
   RowBox[{
    SubscriptBox["c", "n"], " ", 
    RowBox[{
     SubscriptBox["u", "n"], "[", 
     RowBox[{"x", ",", "t"}], "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.747090417042478*^9, 3.747090429728731*^9}, 
   3.747096026996635*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"45542eeb-626a-417c-848a-1a9389ffaeb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "1"}], "\[Infinity]"], 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
         SuperscriptBox["\[Alpha]", "2"]}], 
        SuperscriptBox["L", "2"]]}]], " ", 
     SubscriptBox["c", "n"]}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.747090417042478*^9, 3.747090429728731*^9}, 
   3.747096027130397*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"07d15120-d786-4b9a-9846-aae28e6f434e"]
}, Open  ]],

Cell["To satisfy the initial condition,", "Text",
 CellChangeTimes->{{3.747095440843145*^9, 
  3.7470954574092093`*^9}},ExpressionUUID->"60007e40-2a9a-4569-b224-\
9baaacf21ac0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "\[Infinity]"], 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
          SuperscriptBox["\[Alpha]", "2"]}], 
         SuperscriptBox["L", "2"]]}]], " ", 
      SubscriptBox["c", "n"]}], " ", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}]}]}], "/.", 
  RowBox[{"t", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SCMAF", "[", 
   RowBox[{"%", ",", "RA", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"At", "[", "1", "]"}], ",", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"x", ",", "0"}], "]"}], "\[Equal]", 
       RowBox[{"f", "[", "x", "]"}]}]}], "}"}]}], "]"}], 
  RowBox[{"(*", "eq20", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.747095462298264*^9, 3.747095497831888*^9}, {
  3.747096029760703*^9, 3.747096030407887*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"1f40da9c-794e-4f72-bd67-4b516761a7a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x", ",", "0"}], "]"}], "\[Equal]", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "1"}], "\[Infinity]"], 
   RowBox[{
    SubscriptBox["c", "n"], " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.747095468887075*^9, 3.747095498138349*^9}, 
   3.747096031648781*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"4f3b72a6-0a43-47ff-b7af-0097ad255b0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x", "]"}], "\[Equal]", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "1"}], "\[Infinity]"], 
   RowBox[{
    SubscriptBox["c", "n"], " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.747095468887075*^9, 3.747095498138349*^9}, 
   3.747096031761611*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"0590d1be-d5ac-46cb-8cb6-898229a6b85e"]
}, Open  ]],

Cell[TextData[{
 "The coefficient ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "n"], TraditionalForm]],ExpressionUUID->
  "7c8a339e-a07d-485f-b50b-6b2424e3e49f"],
 " is given by"
}], "Text",
 CellChangeTimes->{{3.747095543219325*^9, 
  3.747095550037552*^9}},ExpressionUUID->"57f670d8-334e-46d3-b8e2-\
259f7409f81f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["c", "n"], "\[Equal]", 
  RowBox[{
   FractionBox["2", "L"], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "L"], 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}], 
     RowBox[{"\[DifferentialD]", "x", 
      RowBox[{"(*", "eq21", "*)"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.747095551489377*^9, 3.747095592425762*^9}, 
   3.747101118592779*^9},
 CellLabel->
  "In[325]:=",ExpressionUUID->"0f987b39-ca29-4d37-b4ee-2c6e1b37e2aa"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["c", "n"], "\[Equal]", 
  RowBox[{
   FractionBox["2", "L"], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "L"], 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Output",
 CellChangeTimes->{3.7471011226810837`*^9},
 CellLabel->
  "Out[325]=",ExpressionUUID->"b08f661f-f0c2-4d5b-826d-2d7b248df1a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example 1", "Subsubsection",
 CellChangeTimes->{{3.7470905302737083`*^9, 
  3.747090531518599*^9}},ExpressionUUID->"cbb3ee51-5f1b-4361-a82a-\
ab9b01d499ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "\[Infinity]"], 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
          SuperscriptBox["\[Alpha]", "2"]}], 
         SuperscriptBox["L", "2"]]}]], " ", 
      SubscriptBox["c", "n"]}], " ", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}]}]}], 
  RowBox[{"(*", "eq19", "*)"}], "/.", 
  RowBox[{"L", "\[Rule]", "50", 
   RowBox[{"(*", "eq22", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.747095650149827*^9, 3.7470957092898808`*^9}, {
  3.747096036706308*^9, 3.747096037217947*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"7dd64587-f1c2-4528-98b3-7e855e1efa8c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "1"}], "\[Infinity]"], 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
         SuperscriptBox["\[Alpha]", "2"]}], "2500"]}]], " ", 
     SubscriptBox["c", "n"]}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"n", " ", "\[Pi]", " ", "x"}], "50"], "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.747095672180277*^9, 3.7470957112635098`*^9}, 
   3.747096037754459*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"69b4342b-9bee-4a23-b814-5dcb5db2bdf7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["c", "n"], "\[Equal]", 
   RowBox[{
    FractionBox["2", "L"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "L"], 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], 
  RowBox[{"(*", "eq21", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SCMAF", "[", 
   RowBox[{"%", ",", "RA", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"At", "[", "2", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "x", "]"}], "\[Equal]", "20"}], ",", 
        RowBox[{"L", "\[Equal]", "50"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"Post", "\[Rule]", "SCEvalInt"}], ",", "\[IndentingNewLine]", 
    "FullSimplify", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"At", "[", "2", "]"}], ",", 
      RowBox[{
       RowBox[{"n", ">", "0"}], "&&", 
       RowBox[{"n", "\[Element]", "Integers"}]}]}], "}"}]}], "]"}], 
  RowBox[{"(*", "eq23", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7470957152752123`*^9, 3.74709579618491*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"c0a07e22-d328-4e23-9938-0f88557e6d3d"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["c", "n"], "\[Equal]", 
  RowBox[{
   FractionBox["2", "L"], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "L"], 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Output",
 CellChangeTimes->{{3.747095733289321*^9, 3.7470957964642677`*^9}},
 CellLabel->
  "Out[158]=",ExpressionUUID->"bc5480b7-4403-4644-8723-e770783aa9c7"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["c", "n"], "\[Equal]", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"40", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"n", " ", "\[Pi]"}], "]"}]}], ")"}]}], 
    RowBox[{"n", " ", "\[Pi]"}]]}]}]], "Output",
 CellChangeTimes->{
  3.747095796489629*^9},ExpressionUUID->"a343a03d-989b-432a-9561-\
a41cfa0827d8"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["c", "n"], "\[Equal]", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"40", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "n"]}], ")"}]}], 
    RowBox[{"n", " ", "\[Pi]"}]]}]}]], "Output",
 CellChangeTimes->{{3.747095733289321*^9, 3.747095796533485*^9}},
 CellLabel->
  "Out[159]=",ExpressionUUID->"df383274-02eb-49ed-b0b6-c1eefa6c0908"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "1"}], "\[Infinity]"], 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
         SuperscriptBox["\[Alpha]", "2"]}], "2500"]}]], " ", 
     SubscriptBox["c", "n"]}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"n", " ", "\[Pi]", " ", "x"}], "50"], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SCMAF", "[", 
   RowBox[{"%", ",", "RA", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"At", "[", "2", "]"}], ",", 
      RowBox[{
       SubscriptBox["c", "n"], "\[Equal]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"40", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], "n"]}], ")"}]}], 
         RowBox[{"n", " ", "\[Pi]"}]]}]}]}], "}"}], ",", 
    RowBox[{"Post", "\[Rule]", "FullSimplify"}]}], "]"}], 
  RowBox[{"(*", "eq24", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.747095804088688*^9, 3.747095845936903*^9}, {
  3.747096043179978*^9, 3.747096043715068*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"52230bc1-15d0-4309-8175-c964067b322b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "1"}], "\[Infinity]"], 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
         SuperscriptBox["\[Alpha]", "2"]}], "2500"]}]], " ", 
     SubscriptBox["c", "n"]}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"n", " ", "\[Pi]", " ", "x"}], "50"], "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.747095813571767*^9, 3.747095846264889*^9}, 
   3.747096044142027*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"c72f6e32-95e3-46d4-a23d-87cb6f4356c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["40", "\[Pi]"]}], " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "\[Infinity]"], 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"]}], ")"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "2500"]}]]}], "n"], " ", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"n", " ", "\[Pi]", " ", "x"}], "50"], "]"}]}]}]}]}]], "Output",\

 CellChangeTimes->{{3.747095813571767*^9, 3.747095846264889*^9}, 
   3.7470960443082333`*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"c56b7cc8-4658-4fcb-a8d7-459b3dae75c6"]
}, Open  ]],

Cell["Temperature distribution at several times is", "Text",
 CellChangeTimes->{{3.747095950725091*^9, 
  3.747095982714282*^9}},ExpressionUUID->"5697f881-ec83-4572-b4a1-\
3748a40ed4dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SCARR", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "0"}], "]"}], ",", 
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "20"}], "]"}], ",", 
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "50"}], "]"}], ",", 
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "150"}], "]"}], ",", 
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "300"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"x_", ",", "t_"}], "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["40", "\[Pi]"]}], " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"n", "=", "1"}], "\[Infinity]"], 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], "n"]}], ")"}], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["n", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
               SuperscriptBox["\[Alpha]", "2"]}], "2500"]}]]}], "n"], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"n", " ", "\[Pi]", " ", "x"}], "50"], "]"}]}]}]}]}], 
     RowBox[{"(*", "eq24", "*)"}], ",", 
     RowBox[{
      SuperscriptBox["\[Alpha]", "2"], "\[Equal]", "1"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "SCEvalSum", ",", 
   RowBox[{"{", 
    RowBox[{"At", "[", 
     RowBox[{"2", ",", "1"}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
   "SCSumChangeInterval", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"At", "[", "2", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "100"}], "}"}]}], "}"}], ",", 
   RowBox[{"Post", "\[Rule]", "SCEvalSum"}], ",", ",", ",", ",", 
   "\[IndentingNewLine]", "Plot", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"At", "[", "2", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "50"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "u"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"At", "[", "1", "]"}]}]}], "}"}], ",", 
   RowBox[{"Take", "\[Rule]", 
    RowBox[{"{", "2", "}"}]}], ",", 
   RowBox[{"IgnoreError", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747096668099195*^9, 3.747096781775251*^9}, 
   3.747096875699987*^9, {3.747097887388598*^9, 3.747098135256555*^9}, {
   3.747106970740049*^9, 3.747106980452363*^9}},
 CellLabel->
  "In[599]:=",ExpressionUUID->"a07f7795-1bce-4913-8a03-b613624d51ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "0"}], "]"}], ",", 
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "20"}], "]"}], ",", 
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "50"}], "]"}], ",", 
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "150"}], "]"}], ",", 
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "300"}], "]"}]}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["40", "\[Pi]"]}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "\[Infinity]"], 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"]}], "n"], " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]", " ", "x"}], "50"], "]"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["40", "\[Pi]"]}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "\[Infinity]"], 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "n"]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "125"]}], " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox["\[Pi]", "2"]}]]}], "n"], " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]", " ", "x"}], "50"], "]"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["40", "\[Pi]"]}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "\[Infinity]"], 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "n"]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "50"]}], " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox["\[Pi]", "2"]}]]}], "n"], " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]", " ", "x"}], "50"], "]"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["40", "\[Pi]"]}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "\[Infinity]"], 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "n"]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["3", "50"]}], " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox["\[Pi]", "2"]}]]}], "n"], " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]", " ", "x"}], "50"], "]"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["40", "\[Pi]"]}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "\[Infinity]"], 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "n"]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["3", "25"]}], " ", 
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox["\[Pi]", "2"]}]]}], "n"], " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]", " ", "x"}], "50"], "]"}]}]}]}]}], 
   "}"}]}]], "Output",
 CellChangeTimes->{
  3.747106980764597*^9},ExpressionUUID->"b2f51694-f8d3-45d0-b57f-\
e74404119fe0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAGIQrdT/d/E8uY12DGBg4nBq4u3CF+n37RmhfK+97H7P
0t/bw+QV/m6f89fsB1z+LK8ZJ0ssgwOM33Fu75PQMBYHmHqnftcDy/054Hy2
7zLvWEx54PxU/V+8hrwCcL6vZupHMXcROH/TldrSkxYScL61kNZ6lnoZOD/9
96S5SyMU4PzXCXsztIIV4fz8Y8+N1/sqwd1XI1CuExarDOd3RbGp/s1Rgav/
JnDQdXqWKpyffLw6zTBDDc4/yC4ZmB2pAecbCjZMe1miBecnfLbV8cvRgfMX
zjsq871XD87f3Gd1+1KQAZxfsss2YK6PIZy//9TST53RRnB+prvl3swIYzh/
zgrDrdlZJnD+xM97GwvKTeH8Z6tKyzKKzOD8I26TZjQ1mcP5jP63HvU3WMD5
DI7bGBdUWsL5HeLffS+1W8H5BVHJh743W8P5DxtNUuyn2sD5IpNn3upcaAvn
LxPQqjw+2w7O33JQJb5c2R4RfkXyruqr7eHh///N9PgXIg5w+XkKC2RsQxD8
dX5n+4ImIfh7a34xZFxA8BW92f8ohzsi7Duv2X3zCoLfc+yfgUKsE5w/ufhl
VsIdBL9GVI5fKdIZzp80f2LO6TkI/kpN1lMlD5wd/oOBscONvuaPs+Rd4PJs
XxglD8Yh+GGTbp7WX+wC999yg411854j5DWTVvn9zXWF82977twU+hrBv7S4
Ste+2A3O/7E50EbpE4L/f0fR1rY8dzjf28DNteYrgn88Vj8zu9gDzrdiD9iw
dSeCv25Dwff//xF8AFAvAaQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$502838#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
L+miB89nOOdZ1dVPMCNDFxv9lKQ5jt5x5cunTPL3rnEzlCPW8+b2X5uji2ke
DXcZ4msHK5NUn+oimKvInRM/pkL+OnuW6yJzfLktJ77YhSsqpL8k65cmZCRB
vOB47KMlb3XxMePPDCce7Ttr9XX4qy7WPHSjOPHMNKdR4RGXHqgr024LiNNz
5w0N8ehB6Pi5nvmc83CfWaL8nx5iO5295xHnPErdcHmZHvb+3GvHQyxU5RJw
REYPro1nv0yTeOtfc0bvobweerd9VpsirqktmzukrIc0U6GgSeLDH2SSd1B6
GI9WHRkj7m7vLjEz1YP0srYLA8ToEjl+2IKMRzb+3i/i1B4Ly+INelii2/q0
n3OfDmR/U9yiR/IqhcofxMVTe3n4d+rhmte2sG/EJ0X+Wr47oYfbmvwHaomT
qqs7Kk7p4cJAnO5r4oyQ1JCCM3pIaZweqyYuajW8kXRBD0/SopxecO6vjONT
drf0kOM3VV9CbKK4/E5rpR5WuqRuucnpv7kDb2r0sNOyLTOTeFtsYeOTt3pY
9s257wpn/j/tudMb9XDQvtb1Eqe/vIxtbt16GHIR7D9DPMVUm9/Fq49fkTFB
nPt8ft9M2sf/9KFdKszeTyxwqZ6qXEQ8OocvgFh5ep/rLSF97FEpDtjN6a+8
pMh7Nfm8YOyrE2f8ay08f5vqw/CYzFxw+ndwr/h7TB+D8kbTMyRfWZzR12Zw
Uh9qriu1J4lzOgJmj8bp42ee3Y5R4h97Igz4z+tD/Oa+pH5ilyNpRVI39cG/
Od7pE/GG65+y11brI9jY2DOHuK/H5VX8G30s0j9bdZP4pFr3j/f1+qi4mLDi
KvHzohE5l2Z9LDmhnHKeWO/VsozAPn10Wqe0hRMr/l5/7hK/AUqlhs+tJ65k
vM9vW2qAmK+6c82IPYIc6lcLGWC6wnyHEXEGl/eivJUGuJjCGKARCwtEn3ih
boCwk2kQIuZhlh36tckA0tbZmS0kn2w/qunBOm+AxtJnu7cSywsvjve/aIBL
x4OLrYh3Z/8ovppmgOCLAoNmxCPvUhfy3DSA4pdNcprE8+XmFFQXGcCZFZy0
hFi9snbO5iYD1PPM7K0g+fI+h1sqxz4bgC0esfMh8cPfEVsetBngb5Gx+T1i
YxHNLOFeAwjX1T2/SGzrlbqpdcIA6uorrvsRhy7YleGxwhBNsgeahImfpePV
+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
qtxk3cvz/zs7a4HzVzb///9t/geOIwYq
          "]]}, 
        Annotation[#, "Charting`Private`Tag$502838#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
j8W9deYS05N4t277Dk1M8FHof+v//5f9DwC5a5A=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$502838#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$502838#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
SjBRNu0nKO7GwfGE3NNNonR9Fk9YtR3nYI6J2JoKQSaSGxo+PDzFgez3xdd+
CTCREZoSeieBg1D9YtKAdmmXYU7yBQ5eFN7LK+Gn96OMY9Nbr3EgoelzP/E3
nV/UFl7vquNgyMT68dAEgWlytXDvXAN09+3IMaD3R+HB35dfiRigT03UA/0E
FqW26NRJGKDc4Ie56ScCK2cCd1+TMUBid8MW014CDjUVpZ6q9PnTkuUaPQRK
1/Ncv5oZIN3b7l42vV/7Ozo/nIg2gOS8Kb6VdQTmZwx2c08Y4JxJgUwHnQ8K
PwTMHomjx8eHfY+m88Mnnyiu+DkDXDJ+K/qqmsCuyMulyrkGcN675/qOSjoP
ZbcXrG8wwIPStCf8twiofd1wNlWciy28Cd3sC3T+0n5R3C3JhcjZxVfEzhNw
CXZsUZXhIvpRSbt/MoEMPk+JWwwujBa8KdQ9Q+e7RTHHH2tykVu1dDTzJAFB
sjp8yIYLyyxSYFEEgZ4jui7UOS6EmyUZNk50HpKdH+9/iYt7RfmyYbsIeBV8
Ksu8zIVC+a+xzB0ExtpSxARzuUjWsXb6vI3+nir8dxpKuTgZs37cxZaAZl0T
/+YOLnaIT+l9NyYQJuqe4aJoiC21A4IRSwhIn73UGZtpiKZw+X6rTgZEXy1q
3Z9jCK8NRh0KHQzwLY6v355viEdmdr96XzEwlHK0ZHWxIabHuzoPtjJQd9U7
vrXaELJrFASiGxgIuW1oIt9tiMHh67LmpQy8be3JzyOMoJ521SSAzs+5kitD
61ON0Jbq8CyAYqBmP9N8xXUK/i1mRunBSkhXvqJkaAeE/bMhuC9DEfcPTfF5
tAB+88qne4sVsGSD0PSyv4whtnpK5EeSPEqeq596/dIYQceeR7r5yiGu7vda
5Z0mYCkNz98kvRhnAwe8nN6YQDU+I0CjQgaHZIgFSx1MAQeHnAe20shXn9t4
oNsUmvFtC56ULMS8MX75ml1m+GzQ62aqLIVra4sPp38yQ67I6eftN+ZDfW+B
9YyvOW5Oy7nZioiha335bfvP5ljQd61C64QQ2rLCVlOB6+i8bl9UlymAn3ds
uUtH1yFUJfN2VdssNXtv/90YPwuUHnnjm+vxk9qwdp35oXELpKS8PLrWdISq
37nG0zuQh2yi4ISoVg+10Nmj8nIQDxxLiZI9X7qpXR6ZEi3BPEiYq54ru9ZN
/di/6LbuIR4EOS6ndxPdlMqJiamZYzzkDfi1Gi/+j4q6/SAu8TwP78bPPuh6
+priCNnculvOw3tVjckCnVYqRjx2Tn8lD83i+0QUC1qoVqmHdgpVPJiLHHgZ
q9xCeSjpTh5+yMM/o/ti6xWaqQtacia8pzzYZt9wl25+Qo1t737R+YYH/wLH
MTvdGgp75JdLvONB8UiKieySauqU2+YQqoeHyysYhYWKVdTSgMdK2b08pCUJ
Gec2l1O2MXmuvl95uLs5kIjWLabSTvWUZYzwkO5YbzmkeJPqT1QQbRvlQalU
QKKtOZ+KSo27yZrgoVXF4fc53Uzq2ZVaPs9JHsiemwWfmy9Ri3N/b079xUPP
mQmnfN0z1N7r+jlNMzzEqnyMf6p7hLp5y39idpaHo09S//9/4H/vwfzM
          "]]}, 
        Annotation[#, "Charting`Private`Tag$502838#5"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], 
       FormBox["u", TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 50}, {0., 20.000000000000004`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"u", "(", 
         RowBox[{
           TagBox["x", HoldForm], ",", "0"}], ")"}], 
       RowBox[{"u", "(", 
         RowBox[{
           TagBox["x", HoldForm], ",", "20"}], ")"}], 
       RowBox[{"u", "(", 
         RowBox[{
           TagBox["x", HoldForm], ",", "50"}], ")"}], 
       RowBox[{"u", "(", 
         RowBox[{
           TagBox["x", HoldForm], ",", "150"}], ")"}], 
       RowBox[{"u", "(", 
         RowBox[{
           TagBox["x", HoldForm], ",", "300"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7471069770830584`*^9, 3.747106980925911*^9}},
 CellLabel->
  "Out[599]=",ExpressionUUID->"cf870b30-c1fb-49e3-aef9-ed41387a9f23"]
}, Open  ]],

Cell["Dependence of temperature on time at several locations,", "Text",
 CellChangeTimes->{{3.747095950725091*^9, 3.747095982714282*^9}, {
  3.747096819374322*^9, 
  3.747096839829245*^9}},ExpressionUUID->"c0467072-d9f6-45c1-a650-\
55d115554a7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SCARR", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"5", ",", "t"}], "]"}], ",", 
     RowBox[{"u", "[", 
      RowBox[{"15", ",", "t"}], "]"}], ",", 
     RowBox[{"u", "[", 
      RowBox[{"25", ",", "t"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"x_", ",", "t_"}], "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["40", "\[Pi]"]}], " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"n", "=", "1"}], "\[Infinity]"], 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], "n"]}], ")"}], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               SuperscriptBox["n", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
               SuperscriptBox["\[Alpha]", "2"]}], "2500"]}]]}], "n"], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"n", " ", "\[Pi]", " ", "x"}], "50"], "]"}]}]}]}]}], 
     RowBox[{"(*", "eq24", "*)"}], ",", 
     RowBox[{
      SuperscriptBox["\[Alpha]", "2"], "\[Equal]", "1"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "SCSumChangeInterval", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"At", "[", "2", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "100"}], "}"}]}], "}"}], ",", 
   RowBox[{"Post", "\[Rule]", "SCEvalSum"}], ",", ",", ",", ",", 
   "\[IndentingNewLine]", "Plot", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"At", "[", "2", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "500"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "u"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"At", "[", "1", "]"}]}]}], "}"}], ",", 
   RowBox[{"Take", "\[Rule]", 
    RowBox[{"{", "2", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7470968570324697`*^9, 3.747096872815823*^9}, {
  3.7470981594916677`*^9, 3.747098236261365*^9}, {3.7471069640778008`*^9, 
  3.747106964399556*^9}},
 CellLabel->
  "In[596]:=",ExpressionUUID->"3d99335e-1917-4603-8199-15a8bfa985cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"5", ",", "t"}], "]"}], ",", 
    RowBox[{"u", "[", 
     RowBox[{"15", ",", "t"}], "]"}], ",", 
    RowBox[{"u", "[", 
     RowBox[{"25", ",", "t"}], "]"}]}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["40", "\[Pi]"]}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "\[Infinity]"], 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "n"]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["n", "2"], " ", 
             SuperscriptBox["\[Pi]", "2"], " ", "t"}], "2500"]}]]}], "n"], 
       " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]"}], "10"], "]"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["40", "\[Pi]"]}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "\[Infinity]"], 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "n"]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["n", "2"], " ", 
             SuperscriptBox["\[Pi]", "2"], " ", "t"}], "2500"]}]]}], "n"], 
       " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"3", " ", "n", " ", "\[Pi]"}], "10"], "]"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["40", "\[Pi]"]}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "\[Infinity]"], 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "n"]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["n", "2"], " ", 
             SuperscriptBox["\[Pi]", "2"], " ", "t"}], "2500"]}]]}], "n"], 
       " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]"}], "2"], "]"}]}]}]}]}], "}"}]}]], "Output",\

 CellChangeTimes->{
  3.747106964995146*^9},ExpressionUUID->"9bd4c869-ef14-4ca7-8e4d-\
7abe48c10371"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
98aziP8B793dXA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$500921#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$500921#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fpSv3R9tT8N/AI1Meok=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$500921#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["t", HoldForm], TraditionalForm], 
       FormBox["u", TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 500}, {0., 20.000000000000004`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"u", "(", 
         RowBox[{"5", ",", 
           TagBox["t", HoldForm]}], ")"}], 
       RowBox[{"u", "(", 
         RowBox[{"15", ",", 
           TagBox["t", HoldForm]}], ")"}], 
       RowBox[{"u", "(", 
         RowBox[{"25", ",", 
           TagBox["t", HoldForm]}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7470982370734587`*^9, 3.747106965865046*^9},
 CellLabel->
  "Out[596]=",ExpressionUUID->"1e849650-6c3e-471f-8d1f-2e432b8dfbba"]
}, Open  ]],

Cell[TextData[{
 "A plot of temperature ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]],ExpressionUUID->
  "6bfc05fc-94d7-4843-a4e5-cb518ede6901"],
 " versus ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "18405326-03f2-4245-8fee-362c456c1935"],
 " and ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "c73d03a5-e2a6-47ac-861d-f8d88c8090e3"],
 " is"
}], "Text",
 CellChangeTimes->{{3.7470986334361477`*^9, 
  3.747098658841476*^9}},ExpressionUUID->"50950739-1130-4c11-b293-\
7c0edcf2a5eb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["40", "\[Pi]"]}], " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"n", "=", "1"}], "\[Infinity]"], 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["n", "2"], " ", 
            SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
            SuperscriptBox["\[Alpha]", "2"]}], "2500"]}]]}], "n"], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]", " ", "x"}], "50"], "]"}]}]}]}]}], 
  RowBox[{"(*", "eq24", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"SCMAF", "[", 
  RowBox[{"%", ",", "RA", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"At", "[", "2", "]"}], ",", 
     RowBox[{
      SuperscriptBox["\[Alpha]", "2"], "\[Equal]", "1"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "SCSumChangeInterval", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"At", "[", "2", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "100"}], "}"}]}], "}"}], ",", 
   RowBox[{"Post", "\[Rule]", "SCEvalSum"}], ",", ",", ",", ",", 
   "\[IndentingNewLine]", "Plot3D", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"At", "[", "2", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "50"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "250"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "t", ",", "u"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"Opacity", "[", "0.5", "]"}]}]}], "}"}], ",", 
   RowBox[{"Take", "\[Rule]", 
    RowBox[{"{", "2", "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7470983374484367`*^9, 3.747098479460979*^9}, {
  3.747098529337511*^9, 3.7470985415913143`*^9}, {3.747106955944298*^9, 
  3.7471069562735777`*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"393b9dd1-6e57-4521-b26d-169ce67055c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x", ",", "t"}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["40", "\[Pi]"]}], " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "\[Infinity]"], 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"]}], ")"}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["n", "2"], " ", 
           SuperscriptBox["\[Pi]", "2"], " ", "t", " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "2500"]}]]}], "n"], " ", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"n", " ", "\[Pi]", " ", "x"}], "50"], "]"}]}]}]}]}]], "Output",\

 CellChangeTimes->{{3.747098430659803*^9, 3.747098479878171*^9}, 
   3.747098541938561*^9, 3.747106956749366*^9},
 CellLabel->
  "Out[594]=",ExpressionUUID->"5b3863aa-cd3e-4f78-9b26-cd120a93225e"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
5ivk7adqhDt2qfGDeRXHbVe4tqhbujM7nvx6mo+GIR3XJt03p2+umG/R3uDs
xTQ1OxfW91hRfG5Lc2o/8Yzm5lnVYh7GccP4cfF7RD+t+HHB0d5ralRa7fnC
74XOV8Vkm/zqb+7+jZfvDfrVmTVX6HLILN2K9WzfaorcZkfyhv6Tj08dEBLh
RPMP+jHIGX1frtqIrlvw5pzDM67nB1uSz2ipvKLrGZ5Nj504XuyQ6o72OO4b
flzMz+j/WOD6y7XfZRA/uD33jN8j+HHeHscFT2gW+ccD/CAei115f+KBB8Rf
yOPHecfv3YPPh+Dw7839h9bmEzUc6He6l99H8NwCfpbfRyziPqbLas4HzovG
ggEbV9x1ZmWPl9xJ7N6RuDrn8IB+OjkvH1gn14m99Fs2OFdTnN+Y5oUeI544
0fUpPe+YzxH/gYC7R9/X/H4xP6D9zw35oUuK7Nii0wXro/abEN/N+0f88Oy6
vqhnWc14EQ/4jCGPze9XiOsWfNGCDTa13+Nwv4bnofz+Ao44d0nihIce2eop
u1s50nOjdN5G/NtCDut09WvJSlTWntC3FucL16HH6X0m7s+dWcWeL2+DBttR
nI2mWoZX14wL8yo8lHI/mPfI8xjfgS1mWJBn8LThy2/GlFvTdY44+/H7CPqn
OIObXhqkaMVO2gXvk5dTIQ9pPd8c6DjfgNqDt1O+3W7Pd2vWsOxtV7nLxsQt
d/dutGy7IwseXmwjx+xpvMtLu6pbv3MmjvaXDAbKXb3mzO7dqmgod9mJ2k/Z
ZKyfVCY42qucVxycXurMxo2Zpyz3Unwfr+ei79VO0+VvXrK69f99H0d79BM7
w0RhapUztZd+5928bdHPaoN2/9c/uLQf+9p51cOD2gfz+MHRXpXH/6bwamm1
vfj+ruDbcJ/Db8GlfjBvo32FXkzxVlUXNndRl0/VPcW8HXn3fYhKjrj/gveZ
f952u5ILa6qf/rZ6sriv2TQ55qcUKjh54Ocd1wO+exb1HLai5L0mXQ/gOgH7
JnXva0rXA3irhzZP2r+zofsUuJXzmiVLVcV1At61z6Ezzbc50XkHV0oc5egx
SZxH+i48zSZhbpo4j9LvyDhf4Pt5e5wX8Lq8f/gH78bjgX9wax4//IO35eOF
f3Aj7geewSu4T3jGd88Nb9p6Kr/VIM/g4+TbuQRUGZFn8PZJep8uGVqSZ/As
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
Md2zs6Mm29LvAnwL5/8D5dXngg==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.5], EdgeForm[None], 
      Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
HZ4D94S7wbOlE+EPtW7UJ1N6ar/Tfgp8Ajwf7qO5hhdklgF94esz+0ryg66F
+8K94IXwJ9rTcB3q/ppr+LrM/o58imWZZVI/+Ab4DLgPvBSeyFxP5Hot736P
ZBLtH9J+q2QY/EbmtdEaSXecm9uX+Qr+N73LP0WvpdZUOuWbtG+0l6S7/ih4
32hfqV3+4y9F78+yXNTP7Efp7J/Bcx6j7k/9Nn1ehasWvTf+Snr8t6Jtg0rw
ybTXKthOrqFnU4rpPO2dxqDzsjf1oMz2qq51dqpQV8rsj8gWKJX5HRplli+l
Kf9yvVfm9x+S9ligHpzb/vk72C+MmW2OQbltIenrgzKPqUxmv1D+YTnqEsH1
4PR8PfuCdKYrpLFJ5pTV2Aq2oWVLf6kzm+SFZEXlzP11n2wK7eFJmf0svdeX
BcsGyQiJSvmD9TLbtbJnxD+meWuR5k7v3TzJ1ubp+pWC16dZZl+3dGrXQxuk
tfs8zXfV/8mL9NsaQ+Mko3SLZHy1tNbN0r3lC56jGmntJF/lF0u+VA++PiGt
W9O0lpJPB6e9VC7xt+k3G6c11RgbpfFrniqn+dfvaG0+KnieGqb+pYPntVTw
cxqm8TdJvysfp0Pma82hYiC6X/2bpva90zs2SHOi96uf3rF6ate7t0jvqzF0
y+zfRc1VsJ81NdmZmoOeae9L/stPqEifIzL7Jrrv8My6qW3a39o/I5P8lx5Q
7ODAgm1UxR+k13pmtjl1Lk9Muq5jZn1TOfkv8mOOzfxcPXNMssllm+tdW6d5
qJdY8yP/UXMm3aVnHpee2yOx3kd2XNfMvkf5NGbd2z3zeZVvK313jPZ28Nk5
Jo1BNnXnzOdBdZfE2idixVLU99j/9c/tj34l/cNzq9HWV2tVdBxpqPZrbt9p
Uu64ktr199FJ547NvR97pPHLTtCcSwZqHrQn6qQ1bJfWsSX3N6AeoTUP/t0p
3PdL7rjS5KT7JB9l40sfya+RX6C4Vsc0Ruk1yYgsOhak95dv0TL4+ZdLDsG1
4Uu1LsHjv0z35fZ5plG3oz6c9gmZfTbJLunaT3Pr2D+ouyvWQPtVcLdg3TdX
4wzWcdI/x1G6wDN5RptgXXxlbt9Ve1NxAflI8pW+yG03tUv788hg3Sqd2TpY
d89Q3+CYwyWSr3AzeDp8bLCenae9EKx/r9YcFL3v5KN3DJZ7c2hvH/yOs+CS
0b7xTLhDsK6fDW+SrQ1/kHkuZe9Jn5UJlrXy2U8N1r+y+XsF63HZ8ycG63HZ
5CcE6/oF8EnBcUXp29ODdbT8oX7BOl2+xrBgO2Sl5ipYL8t/qhAdo5SvNzBY
L8sXGBSs9+UjDA7W3fIdzoL7F+xTyEccAt/CO/QJtiXkg/SFjy/Yjzgt2E6Q
jzMh2I/7rx8R7LspRjs52J+STzEp2O+TX3BRsK8nf2dcsG+4Dh4T/LuyGUYG
+3Rr4OrRMUr5m+cE22Cr4HOD/cHV8BnS2QX7VucH+4Y362xGxzXkt14hO6Ng
n0W+7GXwozrT0TEv+XoDgu0c+Wvy/x6A/6XPOtqvKdgPahcdM5JfLP94Oe0f
0Wd9sL0qf0f+tPq/TPsq2mcV7CceGh0Pkq+9MtgfkS/ZO/c+l1zawN8Xwq9z
723wIvhN+HZ4MfwWfDe8DH4/6ZDySdatDvZV5SstDX5H+bwb4AUF+18Pw2sL
9psWBPtB8t3uDo7Hyv/qEm23KQ6geMAdtH/Hb2wKjsfKN9wYHLOVj3aX7PWC
fbotwXMiH+2+4NipfLGHguO3j8I7guOuj8EL4YkF+5WPBMeNn4C3BceK5dNt
DY7Hyk/cGRwffjy3LS+ZIP3xePA4n6K9bZItkgnyheSjyD+pFxzzUcykfnDc
RnGS0zPbWYq998/s6yjG9WFwPPb93HEf9VFMo2ewvJpP+wvBsd8X4CeDY8jP
wB8Ex2Pfg58LjhU/D78UHDN/CX4xOD78Ivw8vBl+Dq4NVy84jrEnOF69m/aP
g+PeH+X2EWsmW0XyULadZE3ZxJKNTZIOkf0gnaD4uPS3bBrdK30sOVor6ZfT
iz5HS3RPdA7mGh66mx/ZRfuH8CfBsfSP4aeCY9S74I/o+7aeS10zOMeh2Mtn
wf71J/T5NDj2tQd+Ijgv8DT8dHDM/NncsRn9Vjnq87Jk/8smCc5fRPocnWRj
abhzcF6mDHyK1hKuIDmQJf9C7xScfykvPRkc2yzCzYPjn5l0WnCOqZTOeHDu
aS+4FXwUXFL6OTh/VCK3bS2bXHpU+SvFVLUAvZMcltzuHxy/ktzuCh8H702f
94Nj8u/C7wXH8N/JHdNUbPNt+NVg+fMqfHx0fFMxq7eC8wVvwW8G5xHehF8L
zgu8Br8enKd4XWc5OIdVFj4u6RHp3JeD8zUv6/nB+axykqWZ7TflpN4Izlm8
QftBcNOCY1OTGM+kouX2I9E2lnz2i+GLipbbsi00N4qjanN1LNrH+St3XFVz
9XfuOKnm/5/cMVmtSx4dF9acV0rxrkpwjI5fa41CdLxYa1GMjhdrb5SIjmtr
7RpE5//qwfWj83N14XrR+bkD4VLReS/tpenB8fwD4Cq0j6W9CrwPPA7eB55G
nwn0qQ1Xpn0M7ZXhqcFx+1pw+ejcofZhxej8X0Xtjej4gmyqk6PjDrLJW0Tn
J5pqjaJj+l3gIUmfSqefFB2zkL13SnRMQfZYz+g4eFf4xOicimyeM6P9edk5
zaNzFU3gUcH50Kpwuei8ps7F2OA4eXV4RnCupA5cNjr/qr1ROjqPqL20V3Re
UOeuaXQ+ozFcJjrPqn3eNzo+IntySnC+oyY8Pjj/sq90aLDt1BpeE6zXWsG3
Bedi2sD7pXiC+t8RHEtvC68Nji0cAT8QnAfpCG8Pjv93gG8PzuMcCd8J3wIf
BW8OznO1h9dF5xR11m6NjtFrz98WHR/U+XqW/o8WvC7ro/OIOmvDomMfstk2
ROcade7uDc6dtYOHRsdQpC8uCc7p7A/vCs5fdIZrpXis2g+Ozgk1glfQZwl9
DocnBueJ9oMvDs6J1ICbROeKDoIbR+dLGsKNovMf9XV+o/NeDeDHgnMlR8N1
o3PnWusHab+X9k5wjRTn137YP513/VbtFOPVOtZMsWuNp1l07upg+IAUT9ZZ
qJZkQjX4wOicvc5XnWg7UeeoX3RcTPb5wOgYlvyFQdExLPkL8t92F+yXzwnO
r+m9rgrO8em95gbnIvXu84LzlZoTxRlDuvea4Lyk9up8eGbBY14UnDfUGVkc
nE/UeVwSnNdrJnlVdCxBsSnlOpSv14OXBdtsLelzdXBuVGu3PNhmOyy3TyR9
oVjOTcF23aHwjcExsUNyx3Dk55cMjispBiPbTnkK+fP7Buf4Oya/V3HjKpLR
0fki+ZPK/yseK12vvI/8GsVjFZeVD35U5nsGJttAcVr5hHqmni1/XL75zug5
l60g+f5D0T6zxib/V/6N4nbvBOd8JX/kn8tP1/cbytP9JdtR8jX55hp/z+Tv
avyKdysOo5yXcrt7Cv8fJ9dvSrcoz6t1V8xcuSbFxfTdhHJiykUqJ6nYnWIZ
RZ5/RHSuWnPeJjoPrbPTKjpXrXk+PDo3rPU6LDpf2wJuHZ3b1rocEp3rbQ63
jM4Baw+0jc43S14dE50j1zkaHvwtivTUGdHxWfmGA6LjtvIlB0fHYeVvXhD8
rYh0Sv/oOK98zNOiY8Hyf0+NjhHLn+0RndeUrBjKvSMK1innBX9nIj01Ivgb
GOmjI6Nz4ZKlQ6JtO9lys4Lz0dKJHaN9DMnSDtHxWcnJ64Jz4np36W3FMZXb
VHxVNrfi6IqjKvimNb4h2L/QHN4enReRfdI+2p+RDL8yOIcunds1Otcu+dw9
Oj8qmXNUdB5d8nxmcJ5d+rpbdD5esv3oaP9HcrVztO8tGT46OH8tOdMp2l+S
nN8Ynb+RfVUVHl+07rs++psV+RpbovMrsqt7RcdZFEs5ITq+oxjO5uhci2zg
u6JzMLLf7ovO08g+vyn6Ow/Z//dHx+Vl926NjqfLZl4e/f2HbOYd0XE3xTR0
3tqmuNAt0d9wyDbbFJ1zkg9yd3SeST7FzdHffMh3WBn9jYh8h+3Rckq5knvg
D4vOQ62O/hZEfkqf6NiNYjgror9Bke19enQsRvGNVdHfl8hn2Radd5Hdvib6
OxX5L0uiv32RTzcu2UvyzS9K8ywffFn0Nyvyy8YnO0o++9hkOyl2cV30tzLy
B2+M/s5GfsHS6G+M5OvdGZ2Tk238f1WHi5E=
           "]], 
          Polygon3DBox[CompressedData["
1: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
NpeGU7M/9H/uDkwn
           "]], Polygon3DBox[CompressedData["
1:eJwt13W4VVUaB+DLufeIoKjYSahgoIRioIQKOKCoKGIrioCCCEg3SCPdIS2p
dCONpDRKSUpZ86jMjD0j837PPn98z13fu357n3PP2XvtdQrXbvxMo1RWVtZO
lVYP5mRlfQIO5MrKGqaflZ2VVZbNZAfZcDabXc1as9YOaqpvpvqz59hguafk
qrK3VD013tx75i6V72n8uHFPuR4qN+vFqrFe+kqOLe+YPqwGG8CqsX+wcSze
8MesHnudtVGt1Qxz7c0VcL4yxjOM98kNkfvEfCvVUk03187cDXJn9bcb/6zO
yj1lrgVrrqYZt+XXy3U3rmz8vvOVl7vP/KWZ/6mp+Tr6uio/a8LGyr0k9yZr
p9qqj811MFdQfqzxu8Yz5OrK1TI/gL3Ehsdnr/LJfcjeYdP0b8q9Kncz687m
syasF7uJdWPzWGPWk41hDdl0Voe9xnqwR1kXVoGVYaNZAzaV1WavZL7P+F6n
mmtj7jrv5UbjrsZz5RrJ9TDfjVVinVk5dj+rwJaxM+wjtpz1Zc+ygewJ9ii7
hX3AlrDmrC87rL40/or/V30jc4caZLxKrr25oTLF2RC2hnVkw9kcNpBtY73Z
IHaN9321mpK5Xq817sDbq09YR1aINdY3UpNZS3YVyzZ+yDiH54nPRl9CDWVr
9Z28xghzpdkYtiWuZzaOfcv+x/5Wx9m3rCQbqd8g14WNZn+rO4wbsz/MPS8z
Vw033sN2q7u9lz/l7o4b1d80e02mlBrFNuq7mvrQ3Dw2gn3BBrCR7B42ln3O
erLxcS72IdvMurOx7C42mm1i3dgYVpT1ZotZM9aHFWG92CLWlH3AZrMBbCvr
xQazWawn+4ytU7f4Px5in8b3qp8st0LuYbacfcumsJXsr/hc2S/qT/ZcXCvq
Sf0Hco+yh2TKsXnsKBvDFrLe7AnWm1VmFVg/VpMNYk+yKux+9hHbxfqzqWwm
68xWsDasKyvP5rNjbCxbxB5gH7P9bCibye5jk9hO1o9NYXeywWw168CGsXdU
AzXJXHNzV/hcfo1sXHf+VpRtGeuDcUP1UaxJ5q6Uu9W4j/FSmRbO18/8bawv
WxbHsf6xprF+7FPWig1gxVh/tpy1ZgNZffW2mmiumbnLvUZ945PmL+OXqx/0
96qJ5nc4tq+5yfwy1pQ1SyfniHN1jCx7T664XDF2MXud9WOPsRpxj7Mv2MVx
zbAv2Rdsj/4ilU9Vc949bJfxhXF/ye2R28/2xbMk3g/bz/axvfr8ajvbx/ay
L/WXxJrA9rIdbJv+/LgP2Xa2ga3W/+X9LWVr2U62neWJ+yuej2wjWxPrktwy
to5tZ1tZbrWe7cis4y+mkmdbPONq+z92sR0sb9xfcrvkdrOd+gviPmS72Wds
pf4Pxy1mq9hyNof9wKazeexTNpt9z6axObGmsZKsJntOVfe6a9lS9h/9XLll
cmvYEvZvNoctZevZqrjX2BK2hi1js9h3bCqbyxaxKexrdjzWfK/RlVVgbfX3
yr2g/0W2gPEb7AdzVeI11TTjk2y8uekyi9lUdoKNY9PYUjadnWIT2Ay2jq1g
v7NFbDXbxD5j59jfqqr3soVtYLnUSrmNmXWoh36BzELVWe59Vo61jvtDndNf
pF5g3fUVHVvNscfY8dgDqIPs6+xkfR6WSta0WNu6Zp4vrdjkWMNyJfuidqwY
q60v6NgbM99RKVafva1+1XdS98U+Ql9C7na571n++BvPUVYv1iV1f9xvciXZ
HeY7sLtYA1aUFY29BrsllVwDcS38qK+lzjPOZf63OGdOcr/tTiWfXXyGU9PJ
9zs5lTx34vnTi21m6+PZE+uiPxuyk8+vbCr5H+J/qSn3OdvIUvGsltskt41t
jmdoPKvZFraVbdJnx7rINme+y3X6n5zrZzXa+R5ha9mP+ply6+Uqs4PsvHiu
sENsJVuQSq7HuC4HOrYLK8/a6O+RK5Wd7DsfSyXfd3zvL8lVYp+z3+LakNsW
6y/bwn5lC9jWzGdalNVgz8YzxLGr2WL2L/1suSVyq9gidpbNYotZIfY+m80a
sm7sD1WCPcOuZEX0heW6sDnsXdY97qHMHqWj1+uo76R+jjWfvSiXV66Q/vfY
E7Hq7Ap2s/76nGQ/3D6d7D9jH3ou9gOp5L6M+/M2/RG5o+zaeJ6xY+y6nGSP
3C6d7K1jj32afcNuimeh3DfsJ3Wr/nnny8MK6q/MPK9appM9VeytDrMj7Bq1
T+4oW8gm6A87dhSbxBaw8ewQG8kmsEHsFTYyPnv2JBvIXmYjWA32BBvMXmWj
4nqMvTwbyeqxSawWe5GNYHXZxNhHxXrFbshJ9uYd0sneMPaIQ9hrbHSsp3LV
2XBWh01gr7Ln2Xw2jn3FRrCJ2clvgfhNMCHzjLzMeYca1zYeJ/dy7GnMX8Le
YP3Z4+xZNoy9ycazV1hNNorVTyVrS6wxlzjfIXaYXa32yh2RO85O6AvE+2En
2HnskVSyx4y95j3sK3aIXZVK9tux706zh/WN5Iqx0uyanGT/3yad/CaK30Z5
WNX4fuVKy5Vj1+Ykv5XappPfWPFbKzeryJrI3Sl3LzufVWEtYl/Lymbu34Wp
5L6P+7+SczRgpeP/jP2D+i7WfzVX7p98hmPn84PsALtc7WIH2QG2Pz7zVPK7
9gA7yo7pr1MH2HGWjz2j7+R8ZVlldlVOsv9v5T000b+nTrBTrFBcq3Kn2BU5
yd6tRTrZo8Ve7SQ7zQqrI3Kn2dexl9IXjGuanWSn2Bn9jeooO8MuZE/Hfe69
PMgqxd4rsydrnk72i7FvzGJlWF25m7TFWV72VNznrAx7hP2oirCnWW52g/4C
uepxjbMHWEWWiz3A6rGbWQmWYg+yt1gRVjJz/b2dSn6Xxu/Tht7T/wHCMyJD

           "]]},
         Annotation[#, "Charting`Private`Tag$500018#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jssHVAYB/Bze6u4ngmhWs9KE4/QTmJglA6VSF0h9WxISA2sbMTAJNKh
HRsDoxhqFEM7isGjD7f1GDvo1DDyOzH87+9/bm7yfefk1o3P9s4kQgir0qTE
Xu/jik+TIRTzGWvYzFa2s5Ov2M1+DnGSUzKtL3GeH7jCdX7iNje5xx0e8BuH
H5pt7gs5cm5gSsoehHDsXM4TPuZ3VvAHn/Bn3JW/WMkqOdWrmWENf7OWf1jH
s3gvnsf78oK3TJr5Ui6dG5knf+146JzhV+7zC3e5wS1+5Gcuc41zXOSCvNcn
OMg+vmYXO9jGljiL1Ux7hxu2mlvE57yO9+c7KdRL+J9jLIj34ajk6yNxZw7F
9+Nb5nKAOXE+05Ktv+GjuAt7JCu+Ga0Q8uxTqSNceZd/LHNWQ8qXpfF3ifv/
zB05dzhy
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{795, 1099, 548, 1100, 1094, 1141, 1143, 1474, 1002, 1101, 
       1135, 1136, 1129, 1259, 1471, 1003, 1123, 1095, 1124, 1131, 1004, 1130,
        1257, 1260, 1005, 796, 1261, 1006, 797, 1262, 1146, 1358, 798, 1263, 
       1007, 799, 1264, 1008, 800, 1102, 1265, 1009, 1103, 1132, 1133, 1125, 
       1010, 1104, 1134, 1472, 1258, 1126, 1127, 1011, 1105, 1138, 1473, 1139,
        1137, 1144, 1012, 1106, 1468, 1096, 1013, 1107}], 
      Line3DBox[{802, 1147, 1359, 801, 1140, 556, 1145, 1128, 1266, 1014, 
       1142, 1097, 1267, 1015, 803, 1268, 1016, 804, 1269, 1017, 805, 1270, 
       1148, 1360, 806, 1149, 1361, 807, 1108, 1271, 1018, 1118, 1109, 1272, 
       1019, 1110, 1098, 1273, 1020, 1119, 1254, 1274, 1021, 1120, 1470, 1111,
        1022, 808, 1275, 1023, 809}], 
      Line3DBox[{811, 1150, 1362, 810, 1151, 1363, 812, 1152, 1364, 813, 1276,
        1024, 814, 1277, 1025, 815, 1278, 1026, 816, 1279, 1153, 1365, 817, 
       1154, 1366, 818, 1112, 1155, 1469, 1121, 1113, 1280, 1027, 1122, 1114, 
       1281, 1028, 819, 1282, 1029, 820, 1283, 1030, 821, 1284, 1031, 822}], 
      Line3DBox[{824, 1156, 1367, 823, 1157, 1368, 825, 1158, 1369, 826, 583, 
       827, 1285, 1032, 828, 1286, 1033, 829, 1287, 1159, 1370, 830, 1160, 
       1371, 831, 1161, 1372, 832, 1162, 1373, 833, 1288, 1034, 834, 1289, 
       1035, 835, 1290, 1036, 836, 1291, 1037, 837}], 
      Line3DBox[{839, 1163, 1374, 838, 1164, 1375, 840, 1165, 1376, 841, 1166,
        1377, 842, 599, 843, 1292, 1038, 844, 1293, 1167, 1378, 845, 1168, 
       1379, 846, 1169, 1380, 847, 1170, 1381, 848, 1171, 1382, 849, 607, 850,
        1294, 1039, 851, 1295, 1040, 852}], 
      Line3DBox[{854, 1172, 1383, 853, 1173, 1384, 855, 1174, 1385, 856, 1175,
        1386, 857, 1176, 1387, 858, 615, 859, 1296, 1177, 1388, 860, 1178, 
       1389, 861, 1179, 1390, 862, 1180, 1391, 863, 1181, 1392, 864, 1182, 
       1393, 865, 623, 866, 1297, 1041, 867}], 
      Line3DBox[{871, 1298, 1042, 869, 1299, 1043, 873, 1300, 1044, 875, 1301,
        1045, 877, 1302, 1046, 879, 1303, 1047, 881, 1305, 1306, 1048, 883, 
       1307, 1049, 885, 1308, 1050, 887, 1309, 1051, 889, 1310, 1052, 891, 
       1311, 1053, 893, 1312, 1054, 895, 1313, 1055, 897}], 
      Line3DBox[{896, 639, 894, 1406, 1195, 892, 1405, 1194, 890, 1404, 1193, 
       888, 1403, 1192, 886, 1402, 1191, 884, 1401, 1190, 882, 1400, 1189, 
       1304, 880, 1399, 1188, 878, 1398, 1187, 876, 1397, 1186, 874, 1396, 
       1185, 872, 1395, 1184, 868, 1394, 1183, 870}], 
      Line3DBox[{899, 1196, 1407, 898, 1314, 1056, 900, 1315, 1057, 901, 1316,
        1058, 902, 1317, 1059, 903, 1318, 1060, 904, 1319, 1197, 1408, 905, 
       1320, 1061, 906, 1321, 1062, 907, 1322, 1063, 908, 1323, 1064, 909, 
       1324, 1065, 910, 1325, 1066, 911, 1326, 1067, 912}], 
      Line3DBox[{914, 1198, 1409, 913, 1199, 1410, 915, 1327, 1068, 916, 1328,
        1069, 917, 1329, 1070, 918, 1330, 1071, 919, 1331, 1200, 1411, 920, 
       1201, 1412, 921, 1332, 1072, 922, 1333, 1073, 923, 1334, 1074, 924, 
       1335, 1075, 925, 1336, 1076, 926, 1337, 1077, 927}], 
      Line3DBox[{929, 1202, 1413, 928, 1203, 1414, 930, 1204, 1415, 931, 1338,
        1078, 932, 1339, 1079, 933, 1340, 1080, 934, 1341, 1205, 1416, 935, 
       1206, 1417, 936, 1207, 1418, 937, 1208, 1419, 938, 1342, 1081, 939, 
       1343, 1082, 940, 1344, 1083, 941, 1345, 1084, 942}], 
      Line3DBox[{944, 1209, 1420, 943, 1210, 1421, 945, 1211, 1422, 946, 1212,
        1423, 947, 1346, 1085, 948, 1347, 1086, 949, 1348, 1213, 1424, 950, 
       1214, 1425, 951, 1215, 1426, 952, 1216, 1427, 953, 1217, 1428, 954, 
       1349, 1087, 955, 1350, 1088, 956, 1351, 1089, 957}], 
      Line3DBox[{959, 1218, 1429, 958, 1219, 1430, 960, 1220, 1431, 961, 1221,
        1432, 962, 1222, 1433, 963, 1352, 1090, 964, 1353, 1223, 1434, 965, 
       1224, 1435, 966, 1225, 1436, 967, 1226, 1437, 968, 1227, 1438, 969, 
       1228, 1439, 970, 1354, 1091, 971, 1355, 1092, 972}], 
      Line3DBox[{974, 1229, 1440, 973, 1230, 1441, 975, 1231, 1442, 976, 1232,
        1443, 977, 1233, 1444, 978, 1234, 1445, 979, 1356, 1235, 1446, 980, 
       1236, 1447, 981, 1237, 1448, 982, 1238, 1449, 983, 1239, 1450, 984, 
       1240, 1451, 985, 1241, 1452, 986, 1357, 1093, 987}], 
      Line3DBox[{1001, 1117, 1467, 1256, 1000, 1466, 1253, 999, 1465, 1252, 
       998, 1464, 1251, 997, 1463, 1250, 996, 1462, 1249, 995, 1461, 1248, 
       994, 1460, 1459, 1247, 993, 1458, 1246, 992, 1457, 1245, 991, 1456, 
       1244, 990, 1455, 1243, 989, 1454, 1242, 988, 1255, 1453, 1115, 1116}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{286, 228, 1124, 283, 233, 1267, 357, 569, 1276, 372, 583, 
       387, 1377, 598, 402, 1386, 613, 417, 1397, 628, 1301, 432, 643, 1316, 
       447, 658, 1328, 462, 673, 1338, 477, 1423, 688, 492, 1432, 703, 507, 
       1443, 718, 522, 1456, 733, 537}], 
      Line3DBox[{335, 793, 782, 784, 783, 1260, 336, 558, 1268, 358, 570, 
       1277, 373, 584, 1285, 388, 599, 403, 1387, 614, 418, 1398, 629, 1302, 
       433, 644, 1317, 448, 659, 1329, 463, 674, 1339, 478, 689, 1346, 493, 
       1433, 704, 508, 1444, 719, 523, 1457, 734, 538}], 
      Line3DBox[{337, 549, 1261, 338, 559, 1269, 359, 571, 1278, 374, 585, 
       1286, 389, 600, 1292, 404, 615, 419, 1399, 630, 1303, 434, 645, 1318, 
       449, 660, 1330, 464, 675, 1340, 479, 690, 1347, 494, 705, 1352, 509, 
       1445, 720, 524, 1458, 735, 539}], 
      Line3DBox[{339, 550, 1262, 341, 560, 1270, 360, 572, 1279, 375, 586, 
       1287, 390, 601, 1293, 405, 616, 1296, 420, 631, 1304, 1305, 435, 646, 
       1319, 450, 661, 1331, 465, 676, 1341, 480, 691, 1348, 495, 706, 1353, 
       510, 721, 1356, 525, 1459, 736, 540}], 
      Line3DBox[{343, 552, 1263, 344, 1361, 562, 362, 1366, 574, 377, 1371, 
       588, 392, 1379, 603, 407, 1389, 618, 422, 1401, 633, 1307, 437, 648, 
       1320, 452, 1412, 663, 467, 1417, 678, 482, 1425, 693, 497, 1435, 708, 
       512, 1447, 723, 527, 1461, 738, 542}], 
      Line3DBox[{345, 553, 1264, 346, 755, 768, 563, 1271, 363, 762, 771, 
       1469, 575, 378, 1372, 589, 393, 1380, 604, 408, 1390, 619, 423, 1402, 
       634, 1308, 438, 649, 1321, 453, 664, 1332, 468, 1418, 679, 483, 1426, 
       694, 498, 1436, 709, 513, 1448, 724, 528, 1462, 739, 543}], 
      Line3DBox[{347, 751, 752, 554, 1265, 348, 756, 757, 564, 1272, 364, 763,
        772, 576, 1280, 379, 1373, 590, 394, 1381, 605, 409, 1391, 620, 424, 
       1403, 635, 1309, 439, 650, 1322, 454, 665, 1333, 469, 1419, 680, 484, 
       1427, 695, 499, 1437, 710, 514, 1449, 725, 529, 1463, 740, 544}], 
      Line3DBox[{349, 229, 1125, 288, 234, 1273, 365, 255, 1281, 380, 591, 
       1288, 395, 1382, 606, 410, 1392, 621, 425, 1404, 636, 1310, 440, 651, 
       1323, 455, 666, 1334, 470, 681, 1342, 485, 1428, 696, 500, 1438, 711, 
       515, 1450, 726, 530, 1464, 741, 545}], 
      Line3DBox[{350, 789, 790, 745, 753, 746, 785, 1472, 780, 758, 769, 759, 
       1274, 366, 577, 1282, 381, 592, 1289, 396, 607, 411, 1393, 622, 426, 
       1405, 637, 1311, 441, 652, 1324, 456, 667, 1335, 471, 682, 1343, 486, 
       697, 1349, 501, 1439, 712, 516, 1451, 727, 531, 1465, 742, 546}], 
      Line3DBox[{351, 271, 322, 315, 1473, 786, 760, 770, 1470, 761, 367, 578,
        1283, 382, 593, 1290, 397, 608, 1294, 412, 623, 427, 1406, 638, 1312, 
       442, 653, 1325, 457, 668, 1336, 472, 683, 1344, 487, 698, 1350, 502, 
       713, 1354, 517, 1452, 728, 532, 1466, 743, 547}], 
      Line3DBox[{352, 774, 775, 754, 1468, 747, 353, 565, 1275, 368, 579, 
       1284, 383, 594, 1291, 398, 609, 1295, 413, 624, 1297, 428, 639, 1313, 
       443, 654, 1326, 458, 669, 1337, 473, 684, 1345, 488, 699, 1351, 503, 
       714, 1355, 518, 729, 1357, 533, 1467, 765, 766, 767}], 
      Line3DBox[{534, 730, 764, 1453, 519, 715, 1440, 504, 700, 1429, 489, 
       685, 1420, 474, 670, 1413, 459, 655, 1409, 444, 640, 1407, 429, 1298, 
       625, 1394, 414, 610, 1383, 399, 595, 1374, 384, 580, 1367, 369, 566, 
       1362, 354, 555, 1359, 332, 548, 748, 777, 776, 778}], 
      Line3DBox[{535, 731, 1454, 520, 716, 1441, 505, 701, 1430, 490, 686, 
       1421, 475, 671, 1414, 460, 656, 1410, 445, 1314, 641, 430, 1299, 626, 
       1395, 415, 611, 1384, 400, 596, 1375, 385, 581, 1368, 370, 567, 1363, 
       355, 556, 794, 331, 333, 1474, 327, 750, 270, 749}], 
      Line3DBox[{536, 732, 1455, 521, 717, 1442, 506, 702, 1431, 491, 687, 
       1422, 476, 672, 1415, 461, 1327, 657, 446, 1315, 642, 431, 1300, 627, 
       1396, 416, 612, 1385, 401, 597, 1376, 386, 582, 1369, 371, 568, 1364, 
       356, 1266, 557, 791, 781, 792, 334, 1471, 788, 787, 773, 744, 779}], 
      Line3DBox[{541, 737, 1460, 526, 722, 1446, 511, 707, 1434, 496, 692, 
       1424, 481, 677, 1416, 466, 662, 1411, 451, 647, 1408, 436, 1306, 632, 
       1400, 421, 617, 1388, 406, 602, 1378, 391, 587, 1370, 376, 573, 1365, 
       361, 561, 1360, 342, 551, 1358, 340}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
w8Bn70zMHs4x09Vw+8qFa3/ty1Z/G8FwAtdwsAaO82FIYCWOc3MUqxaGE7Qy
rovhOLv6GlbhOJNkimqT+8mIxKLWWMwfD+4+D5KjL4+Aftwbq4RbFBR553k0
0r2u9l1k0eeH5zAktvzs4v9BQpe7+qO/VubCpl/Xhx0po6BoTRj7zD2O9K+v
EzBjKYIkqca1tjNE4HeTPL9VbhDN1xV81mMphNcSyrkqWF5ULm3C/sO+DXUP
y1udNcmCHuOeqO63NCiVKCgaG61Au9KbZ1kkE6HNxUhdppoO5033RTyM11Pb
WLji1xOtWAh9IzsiuUiH04+vdmD24CO4ehi3TxP7Cbi9vl0mGcMDJtuf8uJ4
umWrV+N4EoRWDWD4obtcMhbHLynR1IPj520QbcR4gKEqUhPOg9C27XE4D+o1
N6wxHkD92oeXOA++doPeOA/U7Q+es9RNolWf94b6KEZAwuMCHrlvBBjbkMiz
T42MZoOa4vs7L6oVtvLnFZ8igEeJEb+2Ggm9GOyU/dKZArZDHQO+XWPw6rvI
sVntcXRlT83FyHM5wKEVK0P/RIRPx4rDVpUMo4IPUByK3Udv/2RKrt9PAZmX
dwciN3YhuvKMjMaXbJg7qMpk8GsKwodXBaVrfkCx1MA6LtN0mF33ybLPkw4P
Tkvz0/NOqj1TVng0bJgKu3fHhtpj9Y4F+/NYzB7qQvj/2ps9kvtrf+rj1T+Y
f/C+nL8F9+8lCb8uYP75iWcTMTzwy8g+C8djFb1CDMezd52YDoYfHESP6+P4
nTI5JXH8eim7hbB4IffKbhU83oeNV3rxePeG6IdgvMHOy6khOG9rau+sx3kL
h2u8GG/wUikoCeet+vCaXJy3UYn0q1IfScha4V2VZmowGDLdiU9UHAPN+LEd
mgqTKHO/yqvxzrNq2rkuvPLFo3DgV8SLV45EZKjzpJ/YHg8iOt3TjcXjcCZb
qWBs5Tg6qCN1ucEzDTaddjwWu5EE28+wfNuiMIIaSbvN6u5kgeJdI+dmCvY+
tD3z00ehB6VcLA+fOJ8NPDxd9OrAKag1Sbgz86Ee8fbVNl98lAUxrS8ydhvQ
4YnTPt3NtkfUVPRqLfaNZcJqG64fnTN0uMk+54XZQ/7nlI+4/R0Fk3Tc/svn
QyJPFHogMf+wPe7fwa2BiPuXbIhcwPDAiRMFFjiektH9D3A85zm0SzH8UBsl
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
sM9dE8+veot9/n8AsGj0iw==
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["x", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox["u", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{368.9331144554553, 225.90684513078625`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 50}, {0, 250}, {0., 20.523930035527325`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.2349850995465887`, 2.267308466732063, 1.1463655269981838`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.747098430659803*^9, 3.747098479878171*^9}, 
   3.747098541938561*^9, 3.747106958856843*^9},
 CellLabel->
  "Out[595]=",ExpressionUUID->"17995399-6f68-458d-82b9-08627fb63e67"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{793, 743},
WindowMargins->{{Automatic, 104}, {-95, Automatic}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 155, 3, 35, "Text",ExpressionUUID->"72aea544-350f-4b97-bde8-0c329443c01a"],
Cell[716, 25, 372, 7, 140, "Input",ExpressionUUID->"f586dd01-8a05-4ff1-b871-95fc04af50e0",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1113, 36, 180, 3, 67, "Section",ExpressionUUID->"0d319a7d-6934-43d9-aeea-88241c02c03b"],
Cell[1296, 41, 274, 6, 53, "ItemNumbered",ExpressionUUID->"382cafab-c3ac-4a70-b76d-c5245edf0e5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1607, 52, 283, 4, 67, "Section",ExpressionUUID->"da76a470-3977-42c2-b648-46408125d0ea"],
Cell[1893, 58, 65980, 1089, 148, "Text",ExpressionUUID->"8b4004c5-5505-43bf-a95f-8e3b1b68e499"],
Cell[CellGroupData[{
Cell[67898, 1151, 1329, 36, 152, "Input",ExpressionUUID->"83a1e24a-199f-4c9a-93e7-941dea5b5ca6"],
Cell[69230, 1189, 605, 16, 55, "Output",ExpressionUUID->"83a18374-5636-44f4-9572-e3aa3d4bc4cb"],
Cell[69838, 1207, 437, 13, 34, "Output",ExpressionUUID->"57b59356-4415-48a0-96a9-239976bcf5c8"],
Cell[70278, 1222, 506, 12, 53, "Output",ExpressionUUID->"fd64f7a4-d3ba-4ed0-acc7-735a1210f3d8"]
}, Open  ]],
Cell[70799, 1237, 234, 6, 35, "Text",ExpressionUUID->"8d3384a2-0915-4f04-a54c-baf4eedf6195"],
Cell[CellGroupData[{
Cell[71058, 1247, 1150, 33, 135, "Input",ExpressionUUID->"012718b7-cbea-413e-9d7d-3d3cb3c3c98f"],
Cell[72211, 1282, 570, 15, 53, "Output",ExpressionUUID->"6d336287-cf5b-4614-b5ac-f86c679933c3"],
Cell[72784, 1299, 493, 16, 53, "Output",ExpressionUUID->"377709c7-914e-4905-b1f5-ffdffaba81ad"],
Cell[73280, 1317, 572, 15, 37, "Output",ExpressionUUID->"fcdf2f96-65fe-44ae-ba10-a489e197dce3"]
}, Open  ]],
Cell[73867, 1335, 304, 10, 35, "Text",ExpressionUUID->"aa77c684-73d2-401d-92b1-7ebbb116e9e5"],
Cell[CellGroupData[{
Cell[74196, 1349, 892, 24, 86, "Input",ExpressionUUID->"09447f57-0b7f-4d74-911b-364118221ad5"],
Cell[75091, 1375, 377, 9, 34, "Output",ExpressionUUID->"a3f384fa-5e5c-4150-855d-ace09bddfcb5"],
Cell[75471, 1386, 198, 5, 34, "Output",ExpressionUUID->"829652b7-5036-4cb6-88d9-a836b46831c6"],
Cell[75672, 1393, 375, 10, 34, "Output",ExpressionUUID->"f4d9edd3-a932-4204-a9fe-37d3b68247c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76084, 1408, 1028, 30, 101, "Input",ExpressionUUID->"bf08d174-57a3-4e89-9df6-be79457bfb49"],
Cell[77115, 1440, 370, 10, 34, "Output",ExpressionUUID->"5e033be6-aa20-4c31-8d1b-e065f04007c8"],
Cell[77488, 1452, 363, 12, 34, "Output",ExpressionUUID->"3edd881e-191f-4a8f-9610-78a6eec13b3b"],
Cell[77854, 1466, 358, 10, 34, "Output",ExpressionUUID->"d54a4513-3347-4da4-9a89-54c4ec0e7261"]
}, Open  ]],
Cell[78227, 1479, 174, 3, 35, "Text",ExpressionUUID->"6782536e-7732-4370-881e-dabfa762f721"],
Cell[78404, 1484, 758, 23, 35, "Text",ExpressionUUID->"ce7d43fe-91ba-4e88-91cc-77c819fb92f4"],
Cell[CellGroupData[{
Cell[79187, 1511, 885, 23, 90, "Input",ExpressionUUID->"a185bec8-af45-428c-92ae-834daa4bd3ab"],
Cell[80075, 1536, 272, 6, 34, "Output",ExpressionUUID->"aa48b8e5-fb31-43eb-8875-c63cc1432baa"],
Cell[80350, 1544, 300, 9, 34, "Output",ExpressionUUID->"a8b5ace7-905c-49d3-aa5c-2937623f8cd9"],
Cell[80653, 1555, 479, 13, 34, "Output",ExpressionUUID->"c2a663ed-0b29-461c-942b-71a90a5864b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81169, 1573, 1201, 35, 105, "Input",ExpressionUUID->"d510e2f7-6c50-4d3c-bbe2-99eadfce3681"],
Cell[82373, 1610, 316, 8, 34, "Output",ExpressionUUID->"7d2de732-8567-41fd-87e4-93424304babb"],
Cell[82692, 1620, 647, 21, 37, "Output",ExpressionUUID->"e06b21c2-ec03-4542-953a-94735aa9a2d5"],
Cell[83342, 1643, 316, 8, 34, "Output",ExpressionUUID->"bd0c41b2-2e12-4639-aa20-d91bbab12836"]
}, Open  ]],
Cell[83673, 1654, 237, 4, 35, "Text",ExpressionUUID->"03f06675-a239-49db-b30e-ed533057dc98"],
Cell[83913, 1660, 785, 23, 35, "Text",ExpressionUUID->"6443054d-b250-4708-b538-cdd635094172"],
Cell[CellGroupData[{
Cell[84723, 1687, 1089, 27, 90, "Input",ExpressionUUID->"6aed628f-40ff-4307-87aa-cc642732e313"],
Cell[85815, 1716, 296, 6, 34, "Output",ExpressionUUID->"09e6e206-efee-48ed-ae21-c94e8e744816"],
Cell[86114, 1724, 280, 8, 34, "Output",ExpressionUUID->"796cb0f7-a0b6-4b43-88b2-9315cfd8a455"],
Cell[86397, 1734, 455, 12, 34, "Output",ExpressionUUID->"bab09962-05a2-4fcb-b677-57686b54395f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86889, 1751, 964, 26, 65, "Input",ExpressionUUID->"26c89f04-9293-4ff5-8aa0-165da754e37d"],
Cell[87856, 1779, 395, 10, 34, "Output",ExpressionUUID->"4ffbe4b8-c671-4b86-9419-2e07290ed477"],
Cell[88254, 1791, 626, 18, 34, "Output",ExpressionUUID->"daf55828-210e-4a25-b1ad-b1e41743aa91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88917, 1814, 1002, 25, 101, "Input",ExpressionUUID->"fa45fe7b-0abc-4851-909d-f2d5667c9d30"],
Cell[89922, 1841, 555, 14, 34, "Output",ExpressionUUID->"78c2e218-ab4c-44b9-a6dc-1f965acaa330"],
Cell[90480, 1857, 269, 8, 34, "Output",ExpressionUUID->"2a0b9246-9c41-4c7d-82ee-4bf5c6f6b761"],
Cell[90752, 1867, 928, 26, 50, "Output",ExpressionUUID->"1b17dc92-9912-43e0-bc12-60ed35a288a9"]
}, Open  ]],
Cell[91695, 1896, 492, 14, 35, "Text",ExpressionUUID->"3d6863c2-1a57-420e-9ffa-397a3e0f5519"],
Cell[CellGroupData[{
Cell[92212, 1914, 964, 29, 67, "Input",ExpressionUUID->"bb3292ec-94bf-4641-976d-e18b00f85b4b"],
Cell[93179, 1945, 433, 13, 34, "Output",ExpressionUUID->"01ddcecb-314c-4ad1-b7d2-6beba3975d39"],
Cell[93615, 1960, 322, 9, 48, "Output",ExpressionUUID->"4287b4a3-d252-4573-9e91-858c3597bb13"]
}, Open  ]],
Cell[93952, 1972, 303, 9, 35, "Text",ExpressionUUID->"8eed72fc-cbcf-428c-a95c-2a120ee4aaba"],
Cell[CellGroupData[{
Cell[94280, 1985, 1313, 35, 174, "Input",ExpressionUUID->"392241e6-6178-40e9-82fb-bfa6225ef953"],
Cell[95596, 2022, 378, 9, 34, "Output",ExpressionUUID->"e52ec680-a60e-47f5-bffd-5d30a62ea850"],
Cell[95977, 2033, 682, 23, 54, "Output",ExpressionUUID->"0025022c-0f98-4022-887b-f853f75ffd0c"],
Cell[96662, 2058, 415, 11, 54, "Output",ExpressionUUID->"af4435bc-e174-4d8a-8008-fa83869403ee"]
}, Open  ]],
Cell[97092, 2072, 809, 22, 81, "Text",ExpressionUUID->"357bca80-6a0b-4467-8a18-68dce23ee538"],
Cell[97904, 2096, 180, 3, 35, "Text",ExpressionUUID->"05b2f3c4-5a01-4a50-b447-1ee87a7782f1"],
Cell[CellGroupData[{
Cell[98109, 2103, 944, 26, 116, "Input",ExpressionUUID->"579812ed-115c-468e-a095-7a43bdc57070"],
Cell[99056, 2131, 364, 9, 34, "Output",ExpressionUUID->"4aa217b9-2cef-4d4a-a29d-ef0f7738cf9c"],
Cell[99423, 2142, 401, 12, 54, "Output",ExpressionUUID->"270be84f-efb1-4edc-ab02-a8e8b18637a6"],
Cell[99827, 2156, 541, 15, 49, "Output",ExpressionUUID->"40df6b88-bb61-4b67-89d5-2a673183f930"]
}, Open  ]],
Cell[100383, 2174, 223, 4, 35, "Text",ExpressionUUID->"47ac230f-f42f-48f0-b0d4-dca09db8f047"],
Cell[CellGroupData[{
Cell[100631, 2182, 1342, 39, 115, "Input",ExpressionUUID->"bfedafd2-3b79-4f6b-842f-d73b1930452a"],
Cell[101976, 2223, 412, 12, 34, "Output",ExpressionUUID->"78291eca-f548-4689-8092-eb323163ea14"],
Cell[102391, 2237, 656, 19, 57, "Output",ExpressionUUID->"ec11c1e7-4a74-4a92-8818-a2d95f8f8205"]
}, Open  ]],
Cell[103062, 2259, 243, 4, 35, "Text",ExpressionUUID->"72f01a9e-b41c-452d-aaab-d5248a23cb2f"],
Cell[CellGroupData[{
Cell[103330, 2267, 1360, 40, 141, "Input",ExpressionUUID->"3938b533-62e9-49b7-ba37-2d6eab1187f6"],
Cell[104693, 2309, 505, 15, 58, "Output",ExpressionUUID->"45542eeb-626a-417c-848a-1a9389ffaeb3"],
Cell[105201, 2326, 819, 24, 64, "Output",ExpressionUUID->"07d15120-d786-4b9a-9846-aae28e6f434e"]
}, Open  ]],
Cell[106035, 2353, 177, 3, 35, "Text",ExpressionUUID->"60007e40-2a9a-4569-b224-9baaacf21ac0"],
Cell[CellGroupData[{
Cell[106237, 2360, 1268, 37, 121, "Input",ExpressionUUID->"1f40da9c-794e-4f72-bd67-4b516761a7a3"],
Cell[107508, 2399, 521, 15, 58, "Output",ExpressionUUID->"4f3b72a6-0a43-47ff-b7af-0097ad255b0d"],
Cell[108032, 2416, 497, 14, 58, "Output",ExpressionUUID->"0590d1be-d5ac-46cb-8cb6-898229a6b85e"]
}, Open  ]],
Cell[108544, 2433, 321, 10, 35, "Text",ExpressionUUID->"57f670d8-334e-46d3-b8e2-259f7409f81f"],
Cell[CellGroupData[{
Cell[108890, 2447, 585, 17, 60, "Input",ExpressionUUID->"0f987b39-ca29-4d37-b4ee-2c6e1b37e2aa"],
Cell[109478, 2466, 531, 16, 51, "Output",ExpressionUUID->"b08f661f-f0c2-4d5b-826d-2d7b248df1a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110046, 2487, 162, 3, 45, "Subsubsection",ExpressionUUID->"cbb3ee51-5f1b-4361-a82a-ab9b01d499ea"],
Cell[CellGroupData[{
Cell[110233, 2494, 983, 28, 73, "Input",ExpressionUUID->"7dd64587-f1c2-4528-98b3-7e855e1efa8c"],
Cell[111219, 2524, 795, 23, 60, "Output",ExpressionUUID->"69b4342b-9bee-4a23-b814-5dcb5db2bdf7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112051, 2552, 1265, 37, 142, "Input",ExpressionUUID->"c0a07e22-d328-4e23-9938-0f88557e6d3d"],
Cell[113319, 2591, 555, 16, 51, "Output",ExpressionUUID->"bc5480b7-4403-4644-8723-e770783aa9c7"],
Cell[113877, 2609, 420, 14, 51, "Output",ExpressionUUID->"a343a03d-989b-432a-9561-a41cfa0827d8"],
Cell[114300, 2625, 482, 15, 55, "Output",ExpressionUUID->"df383274-02eb-49ed-b0b6-c1eefa6c0908"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114819, 2645, 1467, 44, 155, "Input",ExpressionUUID->"52230bc1-15d0-4309-8175-c964067b322b"],
Cell[116289, 2691, 793, 23, 60, "Output",ExpressionUUID->"c72f6e32-95e3-46d4-a23d-87cb6f4356c1"],
Cell[117085, 2716, 1060, 33, 73, "Output",ExpressionUUID->"c56b7cc8-4658-4fcb-a8d7-459b3dae75c6"]
}, Open  ]],
Cell[118160, 2752, 186, 3, 35, "Text",ExpressionUUID->"5697f881-ec83-4572-b4a1-3748a40ed4dd"],
Cell[CellGroupData[{
Cell[118371, 2759, 2789, 77, 238, "Input",ExpressionUUID->"a07f7795-1bce-4913-8a03-b613624d51ac"],
Cell[121163, 2838, 4140, 131, 179, "Output",ExpressionUUID->"b2f51694-f8d3-45d0-b57f-e74404119fe0"],
Cell[125306, 2971, 53056, 991, 254, "Output",ExpressionUUID->"cf870b30-c1fb-49e3-aef9-ed41387a9f23"]
}, Open  ]],
Cell[178377, 3965, 246, 4, 35, "Text",ExpressionUUID->"c0467072-d9f6-45c1-a650-55d115554a7c"],
Cell[CellGroupData[{
Cell[178648, 3973, 2443, 68, 181, "Input",ExpressionUUID->"3d99335e-1917-4603-8199-15a8bfa985cb"],
Cell[181094, 4043, 2758, 90, 139, "Output",ExpressionUUID->"9bd4c869-ef14-4ca7-8e4d-7abe48c10371"],
Cell[183855, 4135, 27590, 536, 255, "Output",ExpressionUUID->"1e849650-6c3e-471f-8d1f-2e432b8dfbba"]
}, Open  ]],
Cell[211460, 4674, 536, 17, 35, "Text",ExpressionUUID->"50950739-1130-4c11-b293-7c0edcf2a5eb"],
Cell[CellGroupData[{
Cell[212021, 4695, 2267, 64, 205, "Input",ExpressionUUID->"393b9dd1-6e57-4521-b26d-169ce67055c6"],
Cell[214291, 4761, 1080, 33, 73, "Output",ExpressionUUID->"5b3863aa-cd3e-4f78-9b26-cd120a93225e"],
Cell[215374, 4796, 90042, 1476, 243, "Output",ExpressionUUID->"17995399-6f68-458d-82b9-08627fb63e67"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

